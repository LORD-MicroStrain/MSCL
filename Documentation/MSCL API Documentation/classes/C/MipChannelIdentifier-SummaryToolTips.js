NDSummary.OnToolTipsLoaded("CClass:MipChannelIdentifier",{1479:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1479\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">MipChannelIdentifier</div></div></div><div class=\"TTSummary\">A single additional identifier for a MipDataPoint. Contains a uint value with an identifier type specifier.</div></div>",1488:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">ID definitions when Type is &lt;MipChannelIdentifier::Type::AIDING_MEASUREMENT_TYPE&gt; GNSS&nbsp; - 0x01 - GNSS DUAL_ANTENNA&nbsp; - 0x02 - Dual Antenna HEADING&nbsp; - 0x03 - Heading PRESSURE&nbsp; - 0x04 - Pressure MAGNETOMETER&nbsp; - 0x05 - Magnetometer SPEED&nbsp; - 0x06 - Speed</div></div>",1489:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">ID definitions when Type is &lt;MipChannelIdentifier::Type::GNSS_CONSTELLATION&gt; UNKNOWN_CONSTELLATION - 0 - Unknown GPS&nbsp; - 1 - GPS GLONASS&nbsp; - 2 - GLONASS GALILEO&nbsp; - 3 - Galileo BEIDOU&nbsp; - 4 - BeiDou</div></div>",1490:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">ID definitions when Type is &lt;MipChannelIdentifier::Type::GNSS_SIGNAL_ID&gt; UNKNOWN&nbsp; - 0 GPS_L1CA&nbsp; - 1 GPS_L1P&nbsp; - 2 GPS_L1Z&nbsp; - 3 GPS_L2CA&nbsp; - 4 GPS_L2P&nbsp; - 5 GPS_L2Z&nbsp; - 6 GPS_L2CL&nbsp; - 7 GPS_L2CM&nbsp; - 8 GPS_L2CML&nbsp; - 9 GPS_L5I&nbsp; - 10 GPS_L5Q&nbsp; - 11 GPS_L5IQ&nbsp; - 12 GPS_L1CD&nbsp; - 13 GPS_L1CP&nbsp; - 14 GPS_L1CDP&nbsp; - 15 GLONASS_G1CA&nbsp; - 32 GLONASS_G1P&nbsp; - 33 GLONASS_G2C&nbsp; - 34 GLONASS_G2P&nbsp; - 35 GALILEO_E1C&nbsp; - 64 GALILEO_E1A&nbsp; - 65 GALILEO_E1B&nbsp; - 66 GALILEO_E1BC&nbsp; - 67 GALILEO_E1ABC&nbsp; - 68 GALILEO_E6C&nbsp; - 69 GALILEO_E6A&nbsp; - 70 GALILEO_E6B&nbsp; - 71 GALILEO_E6BC&nbsp; - 72 GALILEO_E6ABC&nbsp; - 73 GALILEO_E5BI&nbsp; - 74 GALILEO_E5BQ&nbsp; - 75 GALILEO_E5BIQ&nbsp; - 76 GALILEO_E5ABI&nbsp; - 77 GALILEO_E5ABQ&nbsp; - 78 GALILEO_E5ABIQ&nbsp; - 79 GALILEO_E5AI&nbsp; - 80 GALILEO_E5AQ&nbsp; - 81 GALILEO_E5AIQ&nbsp; - 82 SBAS_L1CA&nbsp; - 96 SBAS_L5I&nbsp; - 97 SBAS_L5Q&nbsp; - 98 SBAS_L5IQ&nbsp; - 99 QZSS_L1CA&nbsp; - 128 QZSS_LEXS&nbsp; - 129 QZSS_LEXL&nbsp; - 130 QZSS_LEXSL&nbsp; - 131 QZSS_L2CM&nbsp; - 132 QZSS_L2CL&nbsp; - 133 QZSS_L2CML&nbsp; - 134 QZSS_L5I&nbsp; - 135 QZSS_L5Q&nbsp; - 136 QZSS_L5IQ&nbsp; - 137 QZSS_L1CD&nbsp; - 138 QZSS_L1CP&nbsp; - 139 QZSS_L1CDP&nbsp; - 140 BEIDOU_B1I&nbsp; - 160 BEIDOU_B1Q&nbsp; - 161 BEIDOU_B1IQ&nbsp; - 162 BEIDOU_B3I&nbsp; - 163 BEIDOU_B3Q&nbsp; - 164 BEIDOU_B3IQ&nbsp; - 165 BEIDOU_B2I&nbsp; - 166 BEIDOU_B2Q&nbsp; - 167 BEIDOU_B2IQ&nbsp; - 168</div></div>",1491:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1491\" class=\"NDPrototype NoParameterForm\">MipChannelIdentifier()</div><div class=\"TTSummary\">Default constructor</div></div>",1492:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1492\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipChannelIdentifier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Type&nbsp;</td><td class=\"PName last\">identiferType,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">id</td></tr></table></td><td class=\"PAfterParameters\">) : m_type(identiferType), m_id(id)</td></tr></table></div><div class=\"TTSummary\">Construct MipChannelIdentifier object with specified MipChannelIdentifier::Type and ID values.</div></div>",1493:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1493\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipChannelIdentifier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Type&nbsp;</td><td class=\"PName last\">identiferType,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">specifier</td></tr></table></td><td class=\"PAfterParameters\">) : m_type(identiferType), m_id(id), m_specifier(specifier)</td></tr></table></div><div class=\"TTSummary\">Construct MipChannelIdentifier object with specified MipChannelIdentifier::Type and ID values.</div></div>",1494:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1494\" class=\"NDPrototype NoParameterForm\">Type identifierType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Returns the MipChannelIdentifier::Type specifier of this identifier.</div></div>",1495:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1495\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> id() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Returns the identifier value.</div></div>",1496:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1496\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> hasSpecifier() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Indicates whether this identifier has an optional additional specifier.</div></div>",1497:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1497\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> specifier() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Returns the optional additional specifier value.&nbsp; Note: this is only valid and applicable if hasSpecifier returns true - value may be non-zero regardless.</div></div>",1498:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1498\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">std::<span class=\"SHKeyword\">string</span> name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">standardizedFormat&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Returns the string representation of this identifier based on type and value.</div></div>",1499:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1499\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> hasSpecifier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">specifierName</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Indicates whether this identifier has an optional additional specifier.&nbsp; Parameters: specifierName - string reference that is set to the specifier name if found</div></div>",1500:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A vector of MipChannelIdentifier values, used to assign additional identifiers to a MipDataPoint</div></div>"});