NDSummary.OnToolTipsLoaded("File:MicroStrain/MIP/MipTypes.h",{1179:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">Contains enumeration/types for various MIP information</div></div>",1180:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The enums for all the different data classes of MIP data.</div></div>",1192:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The enums for all the different types/categories of MIP commands and data.</div></div>",1199:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The enums for enable or disable of data.</div></div>",1202:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The enums to represent different time categories.</div></div>",1205:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The enums for all of the different MIP commands.</div></div>",1333:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The enums for all of the different MIP Channel Field IDs.</div></div>",1639:"<div class=\"NDToolTip TConstant LC\"><div class=\"TTSummary\">The minimum descriptor that marks the start of available shared data field descriptors. If a field descriptor is above 0xD0 it is shared.</div></div>",1640:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">The enums for different MIP Channel Qualifiers.&nbsp; This combined with the ChannelField produces a unique identifier for each individual channel that is collected.</div></div>",1754:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A ChannelQualifier, int pair indicating the index value of the qualifier in a channel field.</div></div>",1755:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A list of ChannelIndex values</div></div>",1756:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A map of ChannelField values and their associated ChannelIndices</div></div>",1757:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1757\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> std::<span class=\"SHKeyword\">string</span> channelName(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"PType first\">ChannelQualifier&nbsp;</td><td class=\"PName last\">qualifier</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the name of the specified &lt;ChannelId&gt;.&nbsp; This is the universal channel name that should be used for uploading to SensorCloud.</div></div>",1758:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1758\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> MipChannelFields getChannelFields_allDataClasses(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">chField</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Get a list of ChannelFields representing the same descriptor/channel field across all GNSS data classes</div></div>",1759:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1759\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> ChannelField getChannelField_baseDataClass(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">chField</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the ChannelField representing the provided channel field\'s equivalent in the original GNSS data class (0x81)</div></div>",1760:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1760\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> ChannelField getChannelField_toDataClass(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">chField,</td></tr><tr><td class=\"PType first\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the ChannelField representing the provided channel field\'s equivalent in the specified DataClass</div></div>",1761:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1761\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> std::<span class=\"SHKeyword\">string</span> getChannelNamePrependText(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">chField</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the text to prepend the channel name to distinguish between different GNSS data classes</div></div>",1762:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1762\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> std::<span class=\"SHKeyword\">string</span> getChannelNameAppendText(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">chField</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the text to append to the channel name to distinguish between different shared data fields</div></div>",1763:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1763\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static bool</span> isGnssChannelField(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">chField</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Checks whether the provided ChannelField is within a GNSS data set.</div></div>",1764:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1764\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static bool</span> isSharedChannelField(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">chField</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Checks whether the provided ChannelField is a shared field amongst all inertial data sets.</div></div>",1765:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1765\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> ChannelFieldQualifiers channelFieldQualifiers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipChannelFields&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">fields</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets a map of ChannelField values with all associated ChannelQualifier values and their index within the field.</div></div>",1766:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1766\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> ChannelQualifier channelFieldQualifier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">index</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the ChannelQualifier of the ChannelField for the specified index.</div></div>",1767:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1767\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static uint8</span> channelFieldQualifierIndex(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelField&nbsp;</td><td class=\"PName last\">field,</td></tr><tr><td class=\"PType first\">ChannelQualifier&nbsp;</td><td class=\"PName last\">qualifier</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the index of the ChannelQualifier in the ChannelField.</div></div>",1768:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1768\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">MipChannelIdentifier</div></div></div><div class=\"TTSummary\">A single additional identifier for a MipDataPoint. Contains a uint value with an identifier type specifier.</div></div>",1777:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">ID definitions when Type is &lt;MipChannelIdentifier::Type::AIDING_MEASUREMENT_TYPE&gt; GNSS&nbsp; - 0x01 - GNSS DUAL_ANTENNA&nbsp; - 0x02 - Dual Antenna HEADING&nbsp; - 0x03 - Heading PRESSURE&nbsp; - 0x04 - Pressure MAGNETOMETER&nbsp; - 0x05 - Magnetometer SPEED&nbsp; - 0x06 - Speed</div></div>",1778:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">ID definitions when Type is &lt;MipChannelIdentifier::Type::GNSS_CONSTELLATION&gt; UNKNOWN_CONSTELLATION - 0 - Unknown GPS&nbsp; - 1 - GPS GLONASS&nbsp; - 2 - GLONASS GALILEO&nbsp; - 3 - Galileo BEIDOU&nbsp; - 4 - BeiDou</div></div>",1779:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">ID definitions when Type is &lt;MipChannelIdentifier::Type::GNSS_SIGNAL_ID&gt; UNKNOWN&nbsp; - 0 GPS_L1CA&nbsp; - 1 GPS_L1P&nbsp; - 2 GPS_L1Z&nbsp; - 3 GPS_L2CA&nbsp; - 4 GPS_L2P&nbsp; - 5 GPS_L2Z&nbsp; - 6 GPS_L2CL&nbsp; - 7 GPS_L2CM&nbsp; - 8 GPS_L2CML&nbsp; - 9 GPS_L5I&nbsp; - 10 GPS_L5Q&nbsp; - 11 GPS_L5IQ&nbsp; - 12 GPS_L1CD&nbsp; - 13 GPS_L1CP&nbsp; - 14 GPS_L1CDP&nbsp; - 15 GLONASS_G1CA&nbsp; - 32 GLONASS_G1P&nbsp; - 33 GLONASS_G2C&nbsp; - 34 GLONASS_G2P&nbsp; - 35 GALILEO_E1C&nbsp; - 64 GALILEO_E1A&nbsp; - 65 GALILEO_E1B&nbsp; - 66 GALILEO_E1BC&nbsp; - 67 GALILEO_E1ABC&nbsp; - 68 GALILEO_E6C&nbsp; - 69 GALILEO_E6A&nbsp; - 70 GALILEO_E6B&nbsp; - 71 GALILEO_E6BC&nbsp; - 72 GALILEO_E6ABC&nbsp; - 73 GALILEO_E5BI&nbsp; - 74 GALILEO_E5BQ&nbsp; - 75 GALILEO_E5BIQ&nbsp; - 76 GALILEO_E5ABI&nbsp; - 77 GALILEO_E5ABQ&nbsp; - 78 GALILEO_E5ABIQ&nbsp; - 79 GALILEO_E5AI&nbsp; - 80 GALILEO_E5AQ&nbsp; - 81 GALILEO_E5AIQ&nbsp; - 82 SBAS_L1CA&nbsp; - 96 SBAS_L5I&nbsp; - 97 SBAS_L5Q&nbsp; - 98 SBAS_L5IQ&nbsp; - 99 QZSS_L1CA&nbsp; - 128 QZSS_LEXS&nbsp; - 129 QZSS_LEXL&nbsp; - 130 QZSS_LEXSL&nbsp; - 131 QZSS_L2CM&nbsp; - 132 QZSS_L2CL&nbsp; - 133 QZSS_L2CML&nbsp; - 134 QZSS_L5I&nbsp; - 135 QZSS_L5Q&nbsp; - 136 QZSS_L5IQ&nbsp; - 137 QZSS_L1CD&nbsp; - 138 QZSS_L1CP&nbsp; - 139 QZSS_L1CDP&nbsp; - 140 BEIDOU_B1I&nbsp; - 160 BEIDOU_B1Q&nbsp; - 161 BEIDOU_B1IQ&nbsp; - 162 BEIDOU_B3I&nbsp; - 163 BEIDOU_B3Q&nbsp; - 164 BEIDOU_B3IQ&nbsp; - 165 BEIDOU_B2I&nbsp; - 166 BEIDOU_B2Q&nbsp; - 167 BEIDOU_B2IQ&nbsp; - 168</div></div>",1780:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1780\" class=\"NDPrototype NoParameterForm\">MipChannelIdentifier()</div><div class=\"TTSummary\">Default constructor</div></div>",1781:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1781\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipChannelIdentifier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Type&nbsp;</td><td class=\"PName last\">identiferType,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">id</td></tr></table></td><td class=\"PAfterParameters\">) : m_type(identiferType), m_id(id)</td></tr></table></div><div class=\"TTSummary\">Construct MipChannelIdentifier object with specified MipChannelIdentifier::Type and ID values.</div></div>",1782:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1782\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipChannelIdentifier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Type&nbsp;</td><td class=\"PName last\">identiferType,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">specifier</td></tr></table></td><td class=\"PAfterParameters\">) : m_type(identiferType), m_id(id), m_specifier(specifier)</td></tr></table></div><div class=\"TTSummary\">Construct MipChannelIdentifier object with specified MipChannelIdentifier::Type and ID values.</div></div>",1783:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1783\" class=\"NDPrototype NoParameterForm\">Type identifierType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Returns the MipChannelIdentifier::Type specifier of this identifier.</div></div>",1784:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1784\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> id() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Returns the identifier value.</div></div>",1785:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1785\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> hasSpecifier() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Indicates whether this identifier has an optional additional specifier.</div></div>",1786:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1786\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> specifier() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Returns the optional additional specifier value.&nbsp; Note: this is only valid and applicable if hasSpecifier returns true - value may be non-zero regardless.</div></div>",1787:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1787\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">std::<span class=\"SHKeyword\">string</span> name(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">standardizedFormat&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Returns the string representation of this identifier based on type and value.</div></div>",1788:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1788\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> hasSpecifier(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">specifierName</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Indicates whether this identifier has an optional additional specifier.&nbsp; Parameters: specifierName - string reference that is set to the specifier name if found</div></div>",1789:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A vector of MipChannelIdentifier values, used to assign additional identifiers to a MipDataPoint</div></div>",1790:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">Contains an &lt;Command&gt; id and a BytesCollection vector to store the actual bytes to send to the device for that command.</div></div>",1791:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1791\" class=\"NDPrototype NoParameterForm\">MipTypes::Command id</div><div class=\"TTSummary\">MipTypes::Command this object represents</div></div>",1792:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1792\" class=\"NDPrototype NoParameterForm\">BytesCollection commands</div><div class=\"TTSummary\">BytesCollection of raw command bytes</div></div>",1793:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1793\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> buildCmdFailed</div></div>",1794:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1794\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> sendCmdFailed</div></div>",1795:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1795\" class=\"NDPrototype NoParameterForm\">MipCommandBytes() : buildCmdFailed(<span class=\"SHKeyword\">false</span>), sendCmdFailed(<span class=\"SHKeyword\">false</span>)</div><div class=\"TTSummary\">Default constructor for MipCommandBytes object</div></div>",1796:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1796\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipCommandBytes(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">Command&nbsp;</td><td class=\"PName last\">_id</td></tr></table></td><td class=\"PAfterParameters\">) : id(_id), buildCmdFailed(<span class=\"SHKeyword\">false</span>), sendCmdFailed(<span class=\"SHKeyword\">false</span>)</td></tr></table></div><div class=\"TTSummary\">Constructor for MipCommandBytes object</div></div>",1797:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1797\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipCommandBytes(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">Command&nbsp;</td><td class=\"PName last\">_id,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">Bytes&nbsp;</td><td class=\"PName last\">_cmd</td></tr></table></td><td class=\"PAfterParameters\">) : id(_id), commands({ _cmd }), buildCmdFailed(<span class=\"SHKeyword\">false</span>), sendCmdFailed(<span class=\"SHKeyword\">false</span>)</td></tr></table></div><div class=\"TTSummary\">Constructor for MipCommandBytes object</div></div>",1798:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1798\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipCommandBytes(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">Command&nbsp;</td><td class=\"PName last\">_id,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">BytesCollection&nbsp;</td><td class=\"PName last\">_cmds</td></tr></table></td><td class=\"PAfterParameters\">) : id(_id), commands(_cmds), buildCmdFailed(<span class=\"SHKeyword\">false</span>), sendCmdFailed(<span class=\"SHKeyword\">false</span>)</td></tr></table></div><div class=\"TTSummary\">Constructor for MipCommandBytes object</div></div>",1799:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1799\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> add(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Bytes&nbsp;</td><td class=\"PName last\">cmd</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Add raw command Bytes to commands BytesCollection</div></div>",1800:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1800\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> valid()</div><div class=\"TTSummary\">Indicates whether this object contains any relevant information, specifically whether it contains any command Bytes or has been marked for failure.</div></div>",1801:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A vector of MipCommandBytes</div></div>",1802:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A ValueType vector</div></div>",1803:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A Value vector</div></div>",1804:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A list of &lt;MipCommandParameterList&gt; command/parameter definitions</div></div>",1805:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A MipTypes::FunctionSelector vector</div></div>",1806:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A map of locations and values to match in a MIP response to determine success</div></div>",1807:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">Maps GNSS Receiver ID to the MipTypes::DataClass it outputs to</div></div>",1808:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1808\" class=\"NDPrototype NoParameterForm\">GnssReceiverInfo()</div><div class=\"TTSummary\">Constructs GnssReceiverInfo object with default values</div></div>",1809:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1809\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">GnssReceiverInfo(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">recId,</td></tr><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">target,</td></tr><tr><td class=\"PModifierQualifier first\">std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">desc</td></tr></table></td><td class=\"PAfterParameters\">) : id(recId), targetDataClass(target), description(desc)</td></tr></table></div><div class=\"TTSummary\">Constructs GnssReceiverInfo object with specified values</div></div>",1810:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1810\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> id</div><div class=\"TTSummary\">Receiver ID</div></div>",1811:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1811\" class=\"NDPrototype NoParameterForm\">MipTypes::DataClass targetDataClass</div><div class=\"TTSummary\">MIP data class associated with this receiver</div></div>",1812:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1812\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> description</div><div class=\"TTSummary\">ASCII description of receiver</div></div>",1813:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A vector of GnssReceiverInfo</div></div>",1814:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">Stores info related to device comm ports (id, type)</div></div>",1815:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">Available comm port type definitions PRIMARY - 0 AUX&nbsp; - 1</div></div>",1816:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1816\" class=\"NDPrototype NoParameterForm\">DeviceCommPort()</div><div class=\"TTSummary\">Constructs DeviceCommPort object with default values</div></div>",1817:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1817\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">DeviceCommPort(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Type&nbsp;</td><td class=\"PName last\">portType,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">portId</td></tr></table></td><td class=\"PAfterParameters\">) : type(portType), id(portId)</td></tr></table></div><div class=\"TTSummary\">Constructs DeviceCommPort object with specified values</div></div>",1818:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1818\" class=\"NDPrototype NoParameterForm\">Type type</div><div class=\"TTSummary\">Port type (primary, aux, etc.)</div></div>",1819:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1819\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> id</div><div class=\"TTSummary\">Port ID</div></div>",1820:"<div class=\"NDToolTip TStruct LC\"><div class=\"TTSummary\">Information about event trigger or action types</div></div>",1821:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1821\" class=\"NDPrototype NoParameterForm\">EventTypeInfo() : type(<span class=\"SHNumber\">0</span>), maxInstances(<span class=\"SHNumber\">0</span>)</div><div class=\"TTSummary\">Default constructor</div></div>",1822:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1822\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">EventTypeInfo(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">type,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">maxInstances</td></tr></table></td><td class=\"PAfterParameters\">) : type(type), maxInstances(maxInstances)</td></tr></table></div></div>",1823:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1823\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> type</div><div class=\"TTSummary\">The event type based on EventSupportInfo::Query</div></div>",1824:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1824\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> maxInstances</div><div class=\"TTSummary\">Maximum supported instances for the type</div></div>",1825:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A vector of EventTypeInfo</div></div>",1827:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">What type of information to retrieve</div></div>",1830:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1830\" class=\"NDPrototype NoParameterForm\">Query query</div><div class=\"TTSummary\">Type of information</div></div>",1831:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1831\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> maxInstances</div><div class=\"TTSummary\">Maximum number of supported triggers/actions</div></div>",1832:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1832\" class=\"NDPrototype NoParameterForm\">EventTypes entries</div><div class=\"TTSummary\">Event info</div></div>",1833:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1833\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">SensorRange</div></div></div><div class=\"TTSummary\">An object representing a configurable sensor range option</div></div>",1834:"<div class=\"NDToolTip TEnumeration LC\"><div class=\"TTSummary\">Sensor and unit identifiers for configurable Sensor Range command (0x0C,0x52) ALL&nbsp; - 0x00 - All (save as startup, load startup, reset to default only) ACCEL_MS2&nbsp; - 0x01 - Accelerometer in m/s^2 GYRO_DPS&nbsp; - 0x02 - Gyroscope in degrees per second MAG_MG&nbsp; - 0x03 - Magnetometer in mG PRESSURE_HPA - 0x04 - Pressure in hPa</div></div>",1835:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1835\" class=\"NDPrototype NoParameterForm\">Type m_type</div><div class=\"TTSummary\">The SensorRange::Type of this range</div></div>",1836:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1836\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">float</span> m_range</div><div class=\"TTSummary\">This will only be set and valid if read from SupportedSensorRanges object Default: -1 (invalid)</div></div>",1837:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype1837\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> m_id</div><div class=\"TTSummary\">The index ID of this range according to device manual</div></div>",1838:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1838\" class=\"NDPrototype NoParameterForm\">Type type() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">The SensorRange::Type of this range</div></div>",1839:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1839\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">float</span> range() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">This will only be set and valid if read from SupportedSensorRanges object</div></div>",1840:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1840\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> id() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">The index ID of this range according to device manual</div></div>",1841:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A vector of SensorRange values</div></div>",1842:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">A collection of SensorRange::Type values mapped to associated SensorRange objects</div></div>",1843:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1843\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">SupportedSensorRanges</div></div></div><div class=\"TTSummary\">Structure to hold all info for looking up supported sensor ranges for a device</div></div>",1844:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1844\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> SensorRangeOptions options() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Get the supported sensor range options</div></div>",1845:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1845\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">SensorRange lookupRecommended(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">SensorRange::</td><td class=\"PType\">Type&nbsp;</td><td class=\"PName last\">type,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">range</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Lookup the supported option of the specified type that is closest to but also incorporates the specified range.&nbsp; Ex: specified range: Accel_G, 5 supported accel ranges: 4G, 8G, 16G returns: 8G because it is the closest supported option where 5G will not overrun the range</div></div>"});