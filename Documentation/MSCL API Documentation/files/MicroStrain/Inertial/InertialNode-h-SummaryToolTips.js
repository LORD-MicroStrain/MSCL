NDSummary.OnToolTipsLoaded("File:MicroStrain/Inertial/InertialNode.h",{776:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype776\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">InertialNode</div></div></div><div class=\"TTSummary\">A class representing a MicroStrain Inertial Node</div></div>",777:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype777\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">explicit</span> InertialNode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Connection&nbsp;</td><td class=\"PName last\">connection</td></tr></table></td><td class=\"PAfterParameters\">) : MipNode(connection)</td></tr></table></div><div class=\"TTSummary\">Creates an InertialNode object.</div></div>",778:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype778\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipDataPackets getDataPackets(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName\">timeout&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName\">maxPackets&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets up to the requested amount of data packets that have been collected.</div></div>",779:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype779\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> totalPackets()</div><div class=\"TTSummary\">Gets the total number of data packets that are currently in the buffer.</div></div>",780:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype780\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> pollData(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td></td><td class=\"PName\">dataClass,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> MipTypes::</td><td class=\"PType\">MipChannelFields&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName\">fields&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">MipTypes::MipChannelFields()</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Polls the device for a message with the specified fields, for the specified data class.&nbsp; This will cause the device to send a single data packet.</div></div>",781:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype781\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint16</span> getDataRateBase(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the Data decimation base for the data rate calculations of the specified &lt;InertialType&gt;.</div></div>",782:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype782\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipChannels getActiveChannelFields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the current active channel fields for the specified MipTypes::DataClass.</div></div>",783:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype783\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setActiveChannelFields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td></td><td class=\"PName last\">dataClass,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipChannels&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the current active channel fields for the specified MipTypes::DataClass.&nbsp; Note that this function does not add to the existing message format (active channels), but overwrites it entirely.</div></div>",784:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype784\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setFactoryStreamingChannels(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">FactoryStreamingOption&nbsp;</td><td class=\"PName last\">option</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Applies the factory streaming channels to the message format based on the specified action option.</div></div>",785:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype785\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> getCommunicationMode() <span class=\"SHKeyword\">override</span></div><div class=\"TTSummary\">Gets the current communication mode that the node is in.</div></div>",786:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype786\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setCommunicationMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">communicationMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">override</span></td></tr></table></div><div class=\"TTSummary\">Sets the communication mode for the node.&nbsp; Note: The node info will be reset when doing this and therefore will require being fetched again the next time it is requested.</div></div>",787:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype787\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> isDataStreamEnabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Checks whether continuous data streaming is enabled for the specified data class.</div></div>",788:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype788\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableDataStream(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName\">dataClass,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">enable&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span>,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">resumeStreaming&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables continuous data streaming for the node.</div></div>",789:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype789\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> resetFilter()</div><div class=\"TTSummary\">Resets the filter to the initialize state.&nbsp; Note: If the auto-initialization feature is disabled, the initial attitude or heading must be set in order to enter the run state after a reset.</div></div>",790:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype790\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> runFilter()</div><div class=\"TTSummary\">Runs the filter when configured to wait in initialization for Run command.&nbsp; Note: Most devices run when initial values are sent - see the device DCP for details regarding supported commands and filter initialization workflows.</div></div>",791:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype791\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getAutoInitialization()</div><div class=\"TTSummary\">Gets the state of the automatic initialization upon device startup.</div></div>",792:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype792\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAutoInitialization(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the automatic initialization upon device startup.</div></div>",793:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype793\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getAltitudeAid()</div><div class=\"TTSummary\">Gets the state of the altitude aid upon device startup.</div></div>",794:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype794\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAltitudeAid(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the altitude aid upon device startup.</div></div>",795:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype795\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getPitchRollAid()</div><div class=\"TTSummary\">Gets the state of the pitch/roll aid upon device startup.</div></div>",796:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype796\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPitchRollAid(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the pitch/roll aid upon device startup.</div></div>",797:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype797\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableVerticalGyroConstraint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables the Vertical Gyro Constraint control.</div></div>",798:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype798\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> verticalGyroConstraintEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the enabled/disabled state of the Vertical Gyro Constraint control.</div></div>",799:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype799\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableWheeledVehicleConstraint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables the Wheeled Vehicle Constraint control.</div></div>",800:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype800\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> wheeledVehicleConstraintEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the enabled/disabled state of the Wheeled Vehicle Constraint control.</div></div>",801:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype801\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setVelocityZUPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ZUPTSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">ZUPTSettings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the velocity ZUPT control.</div></div>",802:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype802\" class=\"NDPrototype NoParameterForm\">ZUPTSettingsData getVelocityZUPT()</div><div class=\"TTSummary\">Gets the state of the velocity ZUPT control.</div></div>",803:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype803\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAngularRateZUPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ZUPTSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">ZUPTSettings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the angular rate ZUPT control.</div></div>",804:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype804\" class=\"NDPrototype NoParameterForm\">ZUPTSettingsData getAngularRateZUPT()</div><div class=\"TTSummary\">Gets the state of the angular rate ZUPT control.</div></div>",805:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype805\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialAttitude(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">attitude</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial attitude.&nbsp; Note: This command can only be issued in the &quot;INIT&quot; state and should be used with a good estimate of the vehicle attitude.</div></div>",806:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype806\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialHeading(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">heading</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial heading.&nbsp; Note: This command can only be issued in the &quot;INIT&quot; state and should be used with a good estimate of heading. The device will use this value in conjunction with the output of the accelerometers to determine the initial attitude estimate.</div></div>",807:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype807\" class=\"NDPrototype NoParameterForm\">FilterInitializationValues getInitialFilterConfiguration()</div><div class=\"TTSummary\">Gets the initial filter configuration values.</div></div>",808:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype808\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialFilterConfiguration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">FilterInitializationValues&nbsp;</td><td class=\"PName last\">filterConfig</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial filter configuration values.&nbsp; Note: Changes from this command will only be applied if the filter is in the Initialization state (not Running) or on filter reset.</div></div>",809:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype809\" class=\"NDPrototype NoParameterForm\">EulerAngles getSensorToVehicleRotation_eulerAngles()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation using roll, pitch, and yaw Euler angles.&nbsp; These angles define the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the rotation, but they are functionally equivalent.</div></div>",810:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype810\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_eulerAngles(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">angles</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation using roll, pitch, and yaw Euler angles (in radians).&nbsp; These angles define the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the rotation, but they are functionally equivalent.</div></div>",811:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype811\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSensorToVehicleRotation_matrix()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation in a row-major direction cosine matrix format.&nbsp; This matrix defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the rotation, but they are functionally equivalent.</div></div>",812:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype812\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_matrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dcm</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation with a row-major direction cosine matrix. The specified matrix must be orthonormal.&nbsp; This matrix defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the rotation, but they are functionally equivalent.</div></div>",813:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype813\" class=\"NDPrototype NoParameterForm\">Quaternion getSensorToVehicleRotation_quaternion()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation in quaternion format.&nbsp; This quaternion defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the rotation, due to normalization.</div></div>",814:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype814\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_quaternion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Quaternion&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rotation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation in quaternion format.&nbsp; This quaternion defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the rotation, due to normalization.</div></div>",815:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype815\" class=\"NDPrototype NoParameterForm\">EulerAngles getSensorToVehicleTransform_eulerAngles()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation using roll, pitch, and yaw Euler angles.&nbsp; These angles define the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the transformation, but they are functionally equivalent.</div></div>",816:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype816\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_eulerAngles(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">angles</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation using roll, pitch, and yaw Euler angles (in radians).&nbsp; These angles define the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the transformation, but they are functionally equivalent.</div></div>",817:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype817\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSensorToVehicleTransform_matrix()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation in a row-major direction cosine matrix format.&nbsp; This matrix defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the transformation, but they are functionally equivalent.</div></div>",818:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype818\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_matrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dcm</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation with a row-major direction cosine matrix. The specified matrix must be orthonormal.&nbsp; This matrix defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the transformation, but they are functionally equivalent.</div></div>",819:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype819\" class=\"NDPrototype NoParameterForm\">Quaternion getSensorToVehicleTransform_quaternion()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation in quaternion format.&nbsp; This quaternion defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the transformation, due to normalization.</div></div>",820:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype820\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_quaternion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Quaternion&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">transformation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation in quaternion format.&nbsp; This quaternion defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the transformation, due to normalization.</div></div>",821:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype821\" class=\"NDPrototype NoParameterForm\">PositionOffset getSensorToVehicleOffset()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame offset, expressed in the sensor frame.</div></div>",822:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype822\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">PositionOffset&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame offset, expressed in the sensor frame.</div></div>",823:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype823\" class=\"NDPrototype NoParameterForm\">PositionOffset getAntennaOffset()</div><div class=\"TTSummary\">Gets the antenna offset, expressed in the sensor frame.</div></div>",824:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype824\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">PositionOffset&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the antenna offset, expressed in the sensor frame.</div></div>",825:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype825\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getGNSSAssistedFixControl()</div><div class=\"TTSummary\">Gets the GNSS Assisted Fix Control.</div></div>",826:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype826\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGNSSAssistedFixControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enableAssistedFix</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Assisted Fix Control.</div></div>",827:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype827\" class=\"NDPrototype NoParameterForm\">TimeUpdate getGNSSAssistTimeUpdate()</div><div class=\"TTSummary\">Gets the GNSS Assisted Time Update.</div></div>",828:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype828\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGNSSAssistTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeUpdate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">timeUpdate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Assist Time Update.</div></div>",829:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype829\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">mscl::<span class=\"SHKeyword\">uint32</span> getGPSTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">TimeFrame&nbsp;</td><td class=\"PName last\">timeFrame</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the GPS time update.</div></div>",830:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype830\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGPSTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td></td><td class=\"PName last\">MipTypes::TimeFrame,</td></tr><tr><td class=\"PModifierQualifier first\">mscl::</td><td class=\"PType\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">timeData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GPS Time Update.</div></div>",831:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype831\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setConstellationSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ConstellationSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataToUse</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Constellation Settings.</div></div>",832:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype832\" class=\"NDPrototype NoParameterForm\">ConstellationSettingsData getConstellationSettings()</div><div class=\"TTSummary\">Gets the GNSS Constellation Settings.</div></div>",833:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype833\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSBASSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SBASSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataToUse</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS SBAS Settings.</div></div>",834:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype834\" class=\"NDPrototype NoParameterForm\">SBASSettingsData getSBASSettings()</div><div class=\"TTSummary\">Gets the GNSS SBAS Settings.</div></div>",835:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype835\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelerometerBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">biasVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Accelerometer Bias.</div></div>",836:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype836\" class=\"NDPrototype NoParameterForm\">GeometricVector getAccelerometerBias()</div><div class=\"TTSummary\">Gets the Accelerometer Bias.</div></div>",837:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype837\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">biasVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Gyro Bias.</div></div>",838:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype838\" class=\"NDPrototype NoParameterForm\">GeometricVector getGyroBias()</div><div class=\"TTSummary\">Gets the Gyro Bias vector.</div></div>",839:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype839\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">GeometricVector captureGyroBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">samplingTime</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Runs the Gyro Bias capture routine on the inertial device.</div></div>",840:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype840\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerSoftIronMatrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">matrix</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Magnetometer Soft Iron matrix.</div></div>",841:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype841\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getMagnetometerSoftIronMatrix()</div><div class=\"TTSummary\">Gets the Magnetometer Soft Iron matrix.</div></div>",842:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype842\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerHardIronOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offsetVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer hard iron offset vector.</div></div>",843:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype843\" class=\"NDPrototype NoParameterForm\">GeometricVector getMagnetometerHardIronOffset()</div><div class=\"TTSummary\">Gets the magnetometer hard iron offset vector.</div></div>",844:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype844\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setConingAndScullingEnable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables/disables coning and sculling.</div></div>",845:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype845\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getConingAndScullingEnable()</div><div class=\"TTSummary\">determines whether coning and sculling are enabled.</div></div>",846:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype846\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAdvancedLowPassFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdvancedLowPassFilterConfig&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the advanced low-pass filter settings.</div></div>",847:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype847\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">AdvancedLowPassFilterConfig getAdvancedLowPassFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> MipTypes::</td><td class=\"PType\">MipChannelFields&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataDescriptors</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the current advanced low-pass filter settings for the given data descriptors</div></div>",848:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype848\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setComplementaryFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ComplementaryFilterData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the complementary filter settings.</div></div>",849:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype849\" class=\"NDPrototype NoParameterForm\">ComplementaryFilterData getComplementaryFilterSettings()</div><div class=\"TTSummary\">Gets the current complementary filter settings.</div></div>",850:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype850\" class=\"NDPrototype NoParameterForm\">DeviceStatusData getBasicDeviceStatus()</div><div class=\"TTSummary\">Gets the basic device status.</div></div>",851:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype851\" class=\"NDPrototype NoParameterForm\">DeviceStatusData getDiagnosticDeviceStatus()</div><div class=\"TTSummary\">Gets the diagnostic device status.</div></div>",852:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype852\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendRawRTCM_2_3Message(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">RTCMMessage&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">theMessage</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends a raw RTCM 2.3 message.</div></div>",853:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype853\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setVehicleDynamicsMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">VehicleModeType&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the vehicle dynamics mode.</div></div>",854:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype854\" class=\"NDPrototype NoParameterForm\">InertialTypes::VehicleModeType getVehicleDynamicsMode()</div><div class=\"TTSummary\">Gets the vehicle dynamics mode.</div></div>",855:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype855\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEstimationControlFlags(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EstimationControlOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">flags</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the estimation control flags.</div></div>",856:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype856\" class=\"NDPrototype NoParameterForm\">EstimationControlOptions getEstimationControlFlags()</div><div class=\"TTSummary\">Gets the estimation control flags.</div></div>",857:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Sets the estimation control flags.</div></div>",858:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Gets the estimation control flags.</div></div>",859:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype859\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalGNSSUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ExternalGNSSUpdateData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">gnssUpdateData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external GNSS update command.</div></div>",860:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype860\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setHeadingUpdateControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingUpdateOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingUpdateOptions</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the heading update control flags.</div></div>",861:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype861\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> tareOrientation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TareAxisValues&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">axisValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">uses device orientation relative to the NED frame as the sensor to vehicle rotation.</div></div>",862:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype862\" class=\"NDPrototype NoParameterForm\">HeadingUpdateOptions getHeadingUpdateControl()</div><div class=\"TTSummary\">Gets the heading update control flags.</div></div>",863:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype863\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravityErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity magnitude error adaptive measurement settings.</div></div>",864:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype864\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getGravityErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the gravity magnitude error adaptive measurement settings.</div></div>",865:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype865\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer magnitude error adaptive measurement settings.</div></div>",866:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype866\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getMagnetometerErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the magnetometer magnitude error adaptive measurement settings.</div></div>",867:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype867\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagDipAngleErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer dip angle error adaptive measurement settings.</div></div>",868:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype868\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getMagDipAngleErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the magnetometer dip angle error adaptive measurement settings.</div></div>",869:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype869\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer noise standard deviation.</div></div>",870:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype870\" class=\"NDPrototype NoParameterForm\">GeometricVector getMagNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the magnetometer noise standard deviation.</div></div>",871:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype871\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity noise standard deviation.</div></div>",872:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype872\" class=\"NDPrototype NoParameterForm\">GeometricVector getGravNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the gravity noise standard deviation.</div></div>",873:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype873\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the accelerometer noise standard deviation.</div></div>",874:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype874\" class=\"NDPrototype NoParameterForm\">GeometricVector getAccelNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the accelerometer noise standard deviation.</div></div>",875:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype875\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gyroscope noise standard deviation.</div></div>",876:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype876\" class=\"NDPrototype NoParameterForm\">GeometricVector getGyroNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the gyroscope noise standard deviation.</div></div>",877:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype877\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPressureAltNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the pressure altitude noise standard deviation.</div></div>",878:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype878\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">float</span> getPressureAltNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the pressure altitude noise standard deviation.</div></div>",879:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype879\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setHardIronOffsetProcessNoise(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the hard iron offset process noise.</div></div>",880:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype880\" class=\"NDPrototype NoParameterForm\">GeometricVector getHardIronOffsetProcessNoise()</div><div class=\"TTSummary\">Gets the hard iron offset process noise.</div></div>",881:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype881\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelBiasModelParams(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVectors&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the accelerometer bias model parameters.</div></div>",882:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype882\" class=\"NDPrototype NoParameterForm\">GeometricVectors getAccelBiasModelParams()</div><div class=\"TTSummary\">Gets the accelerometer bias model parameters.</div></div>",883:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype883\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroBiasModelParams(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVectors&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gyroscope bias model parameters.</div></div>",884:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype884\" class=\"NDPrototype NoParameterForm\">GeometricVectors getGyroBiasModelParams()</div><div class=\"TTSummary\">Gets the gyroscope bias model parameters.</div></div>",885:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype885\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSoftIronMatrixProcessNoise(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the soft iron matrix process noise.</div></div>",886:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype886\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSoftIronMatrixProcessNoise()</div><div class=\"TTSummary\">Gets the soft iron matrix process noise.</div></div>",887:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype887\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setFixedReferencePosition(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">FixedReferencePositionData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the FixedReferencePositionData data for the specified command.</div></div>",888:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype888\" class=\"NDPrototype NoParameterForm\">FixedReferencePositionData getFixedReferencePosition()</div><div class=\"TTSummary\">Gets the FixedReferencePositionData data for the specified command.</div></div>",889:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype889\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGPSDynamicsMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">GPSDynamicsMode&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GPSDynamicsMode.</div></div>",890:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype890\" class=\"NDPrototype NoParameterForm\">InertialTypes::GPSDynamicsMode getGPSDynamicsMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the GPSDynamicsMode data for this device.</div></div>",891:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype891\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setDevicePowerState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">PowerState&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the PowerState for the specified device.</div></div>",892:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype892\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">InertialTypes::PowerState getDevicePowerState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the PowerState for the specified device.</div></div>",893:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype893\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setDeviceStreamFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">StreamFormat&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the StreamFormat for the specified device.</div></div>",894:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype894\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">InertialTypes::StreamFormat getDeviceStreamFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the StreamFormat for the specified device.</div></div>",895:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype895\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSignalConditioningSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SignalConditioningValues&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the signal conditioning settings for the node.</div></div>",896:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype896\" class=\"NDPrototype NoParameterForm\">SignalConditioningValues getSignalConditioningSettings() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the signal conditioning settings for the node.</div></div>",897:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype897\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEnableDisableMeasurements(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EnableDisableMeasurements&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables/disables estimation filter measurement options for the node.</div></div>",898:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype898\" class=\"NDPrototype NoParameterForm\">EnableDisableMeasurements getEnableDisableMeasurements() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently enabled estimation filter measurement options for the node.</div></div>",899:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype899\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravityNoiseMinimum(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity noise minimum for the device.</div></div>",900:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype900\" class=\"NDPrototype NoParameterForm\">GeometricVector getGravityNoiseMinimum() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the current gravity noise minimum for the device.</div></div>",901:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype901\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalHeadingUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external heading update command.</div></div>",902:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype902\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalHeadingUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingData,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeUpdate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">timestamp</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external heading update command.</div></div>",903:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype903\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> aidingMeasurementEnabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">AidingMeasurementSource&nbsp;</td><td class=\"PName last\">aidingSource</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to check whether the specified aiding source is currently enabled.</div></div>",904:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype904\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableDisableAidingMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">AidingMeasurementSource&nbsp;</td><td class=\"PName last\">aidingSource,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to enable/disable the specified aiding source.</div></div>",905:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype905\" class=\"NDPrototype NoParameterForm\">AutoAdaptiveFilterOptions getAdaptiveFilterOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">sends the Adaptive Filter Options command (0x0D, 0x53) to get the currently configured auto-adaptive filtering options.</div></div>",906:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype906\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAdaptiveFilterOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AutoAdaptiveFilterOptions&nbsp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Adaptive Filter Options command (0x0D, 0x53) to set the auto-adaptive filtering options to the specified values.</div></div>",907:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype907\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">PositionOffset getMultiAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">receiverId</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">sends the Multi Antenna Offset command (0x0D, 0x54) to get the currently configured antenna offset for the specified receiver ID.</div></div>",908:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype908\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMultiAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">receiverId,</td></tr><tr><td class=\"PType first\">PositionOffset&nbsp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to set the position offset of the specified receiver ID.</div></div>",909:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype909\" class=\"NDPrototype NoParameterForm\">InertialTypes::PpsSource getPpsSource() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the PPS source currently configured on the device.</div></div>",910:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype910\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPpsSource(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">PpsSource&nbsp;</td><td class=\"PName last\">ppsSource</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the PPS source.</div></div>",911:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype911\" class=\"NDPrototype NoParameterForm\">OdometerConfiguration getOdometerConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured odometer settings.</div></div>",912:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype912\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setOdometerConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">OdometerConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the odometer configuration.</div></div>",913:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype913\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">GpioConfiguration getGpioConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">pin</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the currently configured GPIO settings.</div></div>",914:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype914\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGpioConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">GpioConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GPIO configuration.</div></div>",915:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype915\" class=\"NDPrototype NoParameterForm\">AntennaLeverArmCalConfiguration getAntennaLeverArmCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured GNSS antenna lever arm calibration configuration.</div></div>",916:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype916\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAntennaLeverArmCal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AntennaLeverArmCalConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GNSS antenna lever arm calibration configuration.</div></div>",917:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype917\" class=\"NDPrototype NoParameterForm\">PositionReferenceConfiguration getRelativePositionReference() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured reference for relative position values.</div></div>",918:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype918\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setRelativePositionReference(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">PositionReferenceConfiguration&nbsp;</td><td class=\"PName last\">ref</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the reference for relative position values.</div></div>",919:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype919\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalSpeedMeasurementUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">tow,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">speed,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">unc</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends an external speed measurement update to be used as a filter input.</div></div>",920:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype920\" class=\"NDPrototype NoParameterForm\">PositionOffset getSpeedMeasurementOffset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured lever arm offset for the speed measurement.</div></div>",921:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype921\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSpeedMeasurementOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">PositionOffset&nbsp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the lever arm offset for the speed measurement.</div></div>",922:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype922\" class=\"NDPrototype NoParameterForm\">GnssSignalConfiguration getGnssSignalConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the device\'s current GNSS signal configuration.</div></div>",923:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype923\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGnssSignalConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">GnssSignalConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GNSS signal configuration.</div></div>",924:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype924\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> rtkEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads whether RTK input is currently enabled on the device.</div></div>",925:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype925\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableRtk(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables RTK input into the device.</div></div>"});