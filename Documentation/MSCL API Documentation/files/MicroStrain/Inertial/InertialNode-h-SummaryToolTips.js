NDSummary.OnToolTipsLoaded("File:MicroStrain/Inertial/InertialNode.h",{1117:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype1117\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">InertialNode</div></div></div><div class=\"TTSummary\">A class representing a MicroStrain Inertial Node</div></div>",1118:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1118\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">explicit</span> InertialNode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">Connection&nbsp;</td><td class=\"PName last\">connection</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates an InertialNode object.</div></div>",1119:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1119\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> std::<span class=\"SHKeyword\">string</span> deviceName(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">serial</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Static function for creating the universal sensor name that should be used for SensorCloud.</div></div>",1120:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1120\" class=\"NDPrototype NoParameterForm\">Connection&amp; connection()</div><div class=\"TTSummary\">Gets the Connection object that this InertialNode is using.</div></div>",1121:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1121\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> MipNodeFeatures&amp; features() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a reference to the MipNodeFeatures for this device.&nbsp; Note: This will be invalid when the InertialNode is destroyed.</div></div>",1122:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1122\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> Timestamp&amp; lastCommunicationTime() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the Timestamp for the last time MSCL communicated with the InertialNode.</div></div>",1123:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1123\" class=\"NDPrototype NoParameterForm\">DeviceState lastDeviceState() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the last known DeviceState for the InertialNode.&nbsp; This device state is updated by MSCL when data packets are received, as well as when operations are performed, such as setting a Node to idle.</div></div>",1124:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1124\" class=\"NDPrototype NoParameterForm\">Version firmwareVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the firmware Version of the InertialNode.</div></div>",1125:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1125\" class=\"NDPrototype NoParameterForm\">InertialModels::NodeModel model() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the InertialModels::NodeModel of the InertialNode.</div></div>",1126:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1126\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> modelName() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the model name of the InertialNode (ie. &quot;3DM-GX3-45&quot;).</div></div>",1127:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1127\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> modelNumber() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the model number of the InertialNode (ie. &quot;6225-4220&quot;).</div></div>",1128:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1128\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> serialNumber() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the serial number of the InertialNode (ie. &quot;6225-01319&quot;).</div></div>",1129:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1129\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> lotNumber() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the lot number of the InertialNode (ie. &quot;I042Y&quot;).</div></div>",1130:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1130\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> deviceOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the device options of the InertialNode (ie. &quot;5g, 300d/s&quot;).</div></div>",1131:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1131\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipDataPackets getDataPackets(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName\">timeout&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName\">maxPackets&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets up to the requested amount of data packets that have been collected.</div></div>",1132:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1132\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> totalPackets()</div><div class=\"TTSummary\">Gets the total number of data packets that are currently in the buffer.</div></div>",1133:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1133\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> timeout(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint64</span>&nbsp;</td><td class=\"PName last\">timeout</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the timeout to use when waiting for responses from Inertial commands.</div></div>",1134:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1134\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint64</span> timeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the timeout to use when waiting for responses from Inertial commands.</div></div>",1135:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1135\" class=\"NDPrototype NoParameterForm\">std::<span class=\"SHKeyword\">string</span> name()</div><div class=\"TTSummary\">Gets the name of the InertialNode. This is the universal sensor name that should be used for uploading to SensorCloud.&nbsp; This is the same as calling InertialNode::deviceName.</div></div>",1136:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1136\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> ping()</div><div class=\"TTSummary\">Pings the Node to check for communication.&nbsp; Sends the &quot;Ping&quot; command to the device.</div></div>",1137:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1137\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> setToIdle()</div><div class=\"TTSummary\">Suspends streaming (if enabled) or wakes the device from sleep (if sleeping), putting the device in an idle mode.&nbsp; After this command is used, the resume command may be used to put the Node back into the mode it was previously in before setToIdle was called.</div></div>",1138:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1138\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> cyclePower()</div><div class=\"TTSummary\">Performs the &quot;Device Reset&quot; Inertial command.&nbsp; Note: This is essentially the same as unplugging and plugging the device back in.</div></div>",1139:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1139\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> resume()</div><div class=\"TTSummary\">Places the Node back in the mode it was in before issuing the setToIdle command.&nbsp; If the setToIdle command was not issued, then the device is placed in default mode.</div></div>",1140:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1140\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> saveSettingsAsStartup(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">MipCommands&nbsp;</td><td class=\"PName last\">cmdIds</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Save the current value of the specified settings commands as a startup setting.</div></div>",1141:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1141\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> saveSettingsAsStartup()</div><div class=\"TTSummary\">Saves all of the current settings as the Node\'s startup settings.&nbsp; Note: A brief data disturbance may occur when calling this command.</div></div>",1142:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1142\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> loadStartupSettings()</div><div class=\"TTSummary\">Loads the saved startup settings onto the Node as its current settings.&nbsp; This function is useful if you have powered on the Node, made changes to its settings, and want to get back to its startup settings.</div></div>",1143:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1143\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> loadFactoryDefaultSettings()</div><div class=\"TTSummary\">Loads the factory default settings onto the Node as its current settings.</div></div>",1144:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1144\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> pollData(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td></td><td class=\"PName\">dataClass,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> MipTypes::</td><td class=\"PType\">MipChannelFields&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName\">fields&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\">MipTypes::MipChannelFields()</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Polls the device for a message with the specified fields, for the specified data class.&nbsp; This will cause the device to send a single data packet.</div></div>",1145:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1145\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint16</span> getDataRateBase(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the Data decimation base for the data rate calculations of the specified &lt;InertialType&gt;.</div></div>",1146:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1146\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">MipChannels getActiveChannelFields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the current active channel fields for the specified MipTypes::DataClass.</div></div>",1147:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1147\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setActiveChannelFields(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td></td><td class=\"PName last\">dataClass,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">MipChannels&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the current active channel fields for the specified MipTypes::DataClass.&nbsp; Note that this function does not add to the existing message format (active channels), but overwrites it entirely.</div></div>",1148:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1148\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> getCommunicationMode()</div><div class=\"TTSummary\">Gets the current communication mode that the node is in.</div></div>",1149:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1149\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setCommunicationMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">communicationMode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the communication mode for the node.&nbsp; Note: The node info will be reset when doing this and therefore will require being fetched again the next time it is requested.</div></div>",1150:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1150\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> isDataStreamEnabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName last\">dataClass</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Checks whether continuous data streaming is enabled for the specified data class.</div></div>",1151:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1151\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableDataStream(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">DataClass&nbsp;</td><td class=\"PName\">dataClass,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">enable&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables continuous data streaming for the node.</div></div>",1152:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1152\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> resetFilter()</div><div class=\"TTSummary\">Resets the filter to the initialize state.&nbsp; Note: If the auto-initialization feature is disabled, the initial attitude or heading must be set in order to enter the run state after a reset.</div></div>",1153:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1153\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getAutoInitialization()</div><div class=\"TTSummary\">Gets the state of the automatic initialization upon device startup.</div></div>",1154:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1154\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAutoInitialization(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the automatic initialization upon device startup.</div></div>",1155:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1155\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getAltitudeAid()</div><div class=\"TTSummary\">Gets the state of the altitude aid upon device startup.</div></div>",1156:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1156\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAltitudeAid(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the altitude aid upon device startup.</div></div>",1157:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1157\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getPitchRollAid()</div><div class=\"TTSummary\">Gets the state of the pitch/roll aid upon device startup.</div></div>",1158:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1158\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPitchRollAid(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the pitch/roll aid upon device startup.</div></div>",1159:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1159\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableVerticalGyroConstraint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables the Vertical Gyro Constraint control.</div></div>",1160:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1160\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> verticalGyroConstraintEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the enabled/disabled state of the Vertical Gyro Constraint control.</div></div>",1161:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1161\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableWheeledVehicleConstraint(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables the Wheeled Vehicle Constraint control.</div></div>",1162:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1162\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> wheeledVehicleConstraintEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the enabled/disabled state of the Wheeled Vehicle Constraint control.</div></div>",1163:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1163\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setVelocityZUPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ZUPTSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">ZUPTSettings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the velocity ZUPT control.</div></div>",1164:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1164\" class=\"NDPrototype NoParameterForm\">ZUPTSettingsData getVelocityZUPT()</div><div class=\"TTSummary\">Gets the state of the velocity ZUPT control.</div></div>",1165:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1165\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAngularRateZUPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ZUPTSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">ZUPTSettings</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the state of the angular rate ZUPT control.</div></div>",1166:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1166\" class=\"NDPrototype NoParameterForm\">ZUPTSettingsData getAngularRateZUPT()</div><div class=\"TTSummary\">Gets the state of the angular rate ZUPT control.</div></div>",1167:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1167\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialAttitude(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">attitude</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial attitude.&nbsp; Note: This command can only be issued in the &quot;INIT&quot; state and should be used with a good estimate of the vehicle attitude.</div></div>",1168:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1168\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialHeading(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PName last\">heading</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial heading.&nbsp; Note: This command can only be issued in the &quot;INIT&quot; state and should be used with a good estimate of heading. The device will use this value in conjunction with the output of the accelerometers to determine the initial attitude estimate.</div></div>",1169:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1169\" class=\"NDPrototype NoParameterForm\">FilterInitializationValues getInitialFilterConfiguration()</div><div class=\"TTSummary\">Gets the initial filter configuration values.</div></div>",1170:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1170\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setInitialFilterConfiguration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">FilterInitializationValues&nbsp;</td><td class=\"PName last\">filterConfig</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the initial filter configuration values.&nbsp; Note: Changes from this command will only be applied if the filter is in the Initialization state (not Running) or on filter reset.</div></div>",1171:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1171\" class=\"NDPrototype NoParameterForm\">EulerAngles getSensorToVehicleRotation_eulerAngles()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation using roll, pitch, and yaw Euler angles.&nbsp; These angles define the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the rotation, but they are functionally equivalent.</div></div>",1172:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1172\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_eulerAngles(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">angles</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation using roll, pitch, and yaw Euler angles (in radians).&nbsp; These angles define the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the rotation, but they are functionally equivalent.</div></div>",1173:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1173\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSensorToVehicleRotation_matrix()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation in a row-major direction cosine matrix format.&nbsp; This matrix defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the rotation, but they are functionally equivalent.</div></div>",1174:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1174\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_matrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dcm</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation with a row-major direction cosine matrix. The specified matrix must be orthonormal.&nbsp; This matrix defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The rotation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the rotation, but they are functionally equivalent.</div></div>",1175:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1175\" class=\"NDPrototype NoParameterForm\">Quaternion getSensorToVehicleRotation_quaternion()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame rotation in quaternion format.&nbsp; This quaternion defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the rotation, due to normalization.</div></div>",1176:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1176\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleRotation_quaternion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Quaternion&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rotation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame rotation in quaternion format.&nbsp; This quaternion defines the rotation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the rotation, due to normalization.</div></div>",1177:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1177\" class=\"NDPrototype NoParameterForm\">EulerAngles getSensorToVehicleTransform_eulerAngles()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation using roll, pitch, and yaw Euler angles.&nbsp; These angles define the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the transformation, but they are functionally equivalent.</div></div>",1178:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1178\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_eulerAngles(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EulerAngles&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">angles</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation using roll, pitch, and yaw Euler angles (in radians).&nbsp; These angles define the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When Euler angles are read back from the device, they may not be equivalent in value to the Euler angles used to set the transformation, but they are functionally equivalent.</div></div>",1179:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1179\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSensorToVehicleTransform_matrix()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation in a row-major direction cosine matrix format.&nbsp; This matrix defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the transformation, but they are functionally equivalent.</div></div>",1180:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1180\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_matrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dcm</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation with a row-major direction cosine matrix. The specified matrix must be orthonormal.&nbsp; This matrix defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: The transformation is stored in the device as a quaternion. When the matrix values are read back from the device, they may not be equivalent in value to the values used to set the transformation, but they are functionally equivalent.</div></div>",1181:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1181\" class=\"NDPrototype NoParameterForm\">Quaternion getSensorToVehicleTransform_quaternion()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame transformation in quaternion format.&nbsp; This quaternion defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the transformation, due to normalization.</div></div>",1182:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1182\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleTransform_quaternion(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Quaternion&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">transformation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame transformation in quaternion format.&nbsp; This quaternion defines the transformation from the sensor body from to the fixed vehicle frame.&nbsp; Note: When the quaternion elements are read back from the device, they may not be equivalent in value to the quaternion used to set the transformation, due to normalization.</div></div>",1183:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1183\" class=\"NDPrototype NoParameterForm\">PositionOffset getSensorToVehicleOffset()</div><div class=\"TTSummary\">Gets the sensor to vehicle frame offset, expressed in the sensor frame.</div></div>",1184:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1184\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSensorToVehicleOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">PositionOffset&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the sensor to vehicle frame offset, expressed in the sensor frame.</div></div>",1185:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1185\" class=\"NDPrototype NoParameterForm\">PositionOffset getAntennaOffset()</div><div class=\"TTSummary\">Gets the antenna offset, expressed in the sensor frame.</div></div>",1186:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1186\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">PositionOffset&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the antenna offset, expressed in the sensor frame.</div></div>",1187:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1187\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getGNSSAssistedFixControl()</div><div class=\"TTSummary\">Gets the GNSS Assisted Fix Control.</div></div>",1188:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1188\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGNSSAssistedFixControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enableAssistedFix</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Assisted Fix Control.</div></div>",1189:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1189\" class=\"NDPrototype NoParameterForm\">TimeUpdate getGNSSAssistTimeUpdate()</div><div class=\"TTSummary\">Gets the GNSS Assisted Time Update.</div></div>",1190:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1190\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGNSSAssistTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeUpdate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">timeUpdate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Assist Time Update.</div></div>",1191:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1191\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">mscl::<span class=\"SHKeyword\">uint32</span> getGPSTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">MipTypes::</td><td class=\"PType\">TimeFrame&nbsp;</td><td class=\"PName last\">timeFrame</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the GPS time update.</div></div>",1192:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1192\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGPSTimeUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td></td><td class=\"PName last\">MipTypes::TimeFrame,</td></tr><tr><td class=\"PModifierQualifier first\">mscl::</td><td class=\"PType\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">timeData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GPS Time Update.</div></div>",1193:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1193\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setConstellationSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ConstellationSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataToUse</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS Constellation Settings.</div></div>",1194:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1194\" class=\"NDPrototype NoParameterForm\">ConstellationSettingsData getConstellationSettings()</div><div class=\"TTSummary\">Gets the GNSS Constellation Settings.</div></div>",1195:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1195\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSBASSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SBASSettingsData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataToUse</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GNSS SBAS Settings.</div></div>",1196:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1196\" class=\"NDPrototype NoParameterForm\">SBASSettingsData getSBASSettings()</div><div class=\"TTSummary\">Gets the GNSS SBAS Settings.</div></div>",1197:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1197\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelerometerBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">biasVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Accelerometer Bias.</div></div>",1198:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1198\" class=\"NDPrototype NoParameterForm\">GeometricVector getAccelerometerBias()</div><div class=\"TTSummary\">Gets the Accelerometer Bias.</div></div>",1199:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1199\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">biasVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Gyro Bias.</div></div>",1200:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1200\" class=\"NDPrototype NoParameterForm\">GeometricVector getGyroBias()</div><div class=\"TTSummary\">Gets the Gyro Bias vector.</div></div>",1201:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1201\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">GeometricVector captureGyroBias(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">samplingTime</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Runs the Gyro Bias capture routine on the inertial device.</div></div>",1202:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1202\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerSoftIronMatrix(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">matrix</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the Magnetometer Soft Iron matrix.</div></div>",1203:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1203\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getMagnetometerSoftIronMatrix()</div><div class=\"TTSummary\">Gets the Magnetometer Soft Iron matrix.</div></div>",1204:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1204\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerHardIronOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">offsetVector</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer hard iron offset vector.</div></div>",1205:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1205\" class=\"NDPrototype NoParameterForm\">GeometricVector getMagnetometerHardIronOffset()</div><div class=\"TTSummary\">Gets the magnetometer hard iron offset vector.</div></div>",1206:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1206\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setConingAndScullingEnable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables/disables coning and sculling.</div></div>",1207:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1207\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getConingAndScullingEnable()</div><div class=\"TTSummary\">determines whether coning and sculling are enabled.</div></div>",1208:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1208\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setUARTBaudRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName\">baudRate,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName\">resetConnection&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the baud rate.&nbsp; The device can be unresponsive for as much as 250 ms following this command.&nbsp; Important: The connection to the port will be automatically closed and re-opened at the new baud rate unless resetConnection parameter is false.</div></div>",1209:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1209\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> getUARTBaudRate()</div><div class=\"TTSummary\">Gets the current baud rate for the inertial device.</div></div>",1210:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1210\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAdvancedLowPassFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdvancedLowPassFilterConfig&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the advanced low-pass filter settings.</div></div>",1211:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1211\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">AdvancedLowPassFilterConfig getAdvancedLowPassFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> MipTypes::</td><td class=\"PType\">MipChannelFields&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">dataDescriptors</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the current advanced low-pass filter settings for the given data descriptors</div></div>",1212:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1212\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setComplementaryFilterSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ComplementaryFilterData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the complementary filter settings.</div></div>",1213:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1213\" class=\"NDPrototype NoParameterForm\">ComplementaryFilterData getComplementaryFilterSettings()</div><div class=\"TTSummary\">Gets the current complementary filter settings.</div></div>",1214:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1214\" class=\"NDPrototype NoParameterForm\">DeviceStatusData getBasicDeviceStatus()</div><div class=\"TTSummary\">Gets the basic device status.</div></div>",1215:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1215\" class=\"NDPrototype NoParameterForm\">DeviceStatusData getDiagnosticDeviceStatus()</div><div class=\"TTSummary\">Gets the diagnostic device status.</div></div>",1216:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1216\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendRawRTCM_2_3Message(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">RTCMMessage&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">theMessage</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sends a raw RTCM 2.3 message.</div></div>",1217:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1217\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setVehicleDynamicsMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">VehicleModeType&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the vehicle dynamics mode.</div></div>",1218:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1218\" class=\"NDPrototype NoParameterForm\">InertialTypes::VehicleModeType getVehicleDynamicsMode()</div><div class=\"TTSummary\">Gets the vehicle dynamics mode.</div></div>",1219:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1219\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEstimationControlFlags(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EstimationControlOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">flags</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the estimation control flags.</div></div>",1220:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1220\" class=\"NDPrototype NoParameterForm\">EstimationControlOptions getEstimationControlFlags()</div><div class=\"TTSummary\">Gets the estimation control flags.</div></div>",1221:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Sets the estimation control flags.</div></div>",1222:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Gets the estimation control flags.</div></div>",1223:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1223\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalGNSSUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ExternalGNSSUpdateData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">gnssUpdateData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external GNSS update command.</div></div>",1224:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1224\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setHeadingUpdateControl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingUpdateOptions&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingUpdateOptions</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the heading update control flags.</div></div>",1225:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1225\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> tareOrientation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TareAxisValues&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">axisValue</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">uses device orientation relative to the NED frame as the sensor to vehicle rotation.</div></div>",1226:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1226\" class=\"NDPrototype NoParameterForm\">HeadingUpdateOptions getHeadingUpdateControl()</div><div class=\"TTSummary\">Gets the heading update control flags.</div></div>",1227:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1227\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravityErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity magnitude error adaptive measurement settings.</div></div>",1228:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1228\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getGravityErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the gravity magnitude error adaptive measurement settings.</div></div>",1229:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1229\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagnetometerErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer magnitude error adaptive measurement settings.</div></div>",1230:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1230\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getMagnetometerErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the magnetometer magnitude error adaptive measurement settings.</div></div>",1231:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1231\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagDipAngleErrorAdaptiveMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">AdaptiveMeasurementData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer dip angle error adaptive measurement settings.</div></div>",1232:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1232\" class=\"NDPrototype NoParameterForm\">AdaptiveMeasurementData getMagDipAngleErrorAdaptiveMeasurement()</div><div class=\"TTSummary\">Gets the magnetometer dip angle error adaptive measurement settings.</div></div>",1233:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1233\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMagNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the magnetometer noise standard deviation.</div></div>",1234:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1234\" class=\"NDPrototype NoParameterForm\">GeometricVector getMagNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the magnetometer noise standard deviation.</div></div>",1235:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1235\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity noise standard deviation.</div></div>",1236:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1236\" class=\"NDPrototype NoParameterForm\">GeometricVector getGravNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the gravity noise standard deviation.</div></div>",1237:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1237\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the accelerometer noise standard deviation.</div></div>",1238:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1238\" class=\"NDPrototype NoParameterForm\">GeometricVector getAccelNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the accelerometer noise standard deviation.</div></div>",1239:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1239\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gyroscope noise standard deviation.</div></div>",1240:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1240\" class=\"NDPrototype NoParameterForm\">GeometricVector getGyroNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the gyroscope noise standard deviation.</div></div>",1241:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1241\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPressureAltNoiseStandardDeviation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the pressure altitude noise standard deviation.</div></div>",1242:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1242\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">float</span> getPressureAltNoiseStandardDeviation()</div><div class=\"TTSummary\">Gets the pressure altitude noise standard deviation.</div></div>",1243:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1243\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setHardIronOffsetProcessNoise(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the hard iron offset process noise.</div></div>",1244:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1244\" class=\"NDPrototype NoParameterForm\">GeometricVector getHardIronOffsetProcessNoise()</div><div class=\"TTSummary\">Gets the hard iron offset process noise.</div></div>",1245:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1245\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAccelBiasModelParams(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVectors&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the accelerometer bias model parameters.</div></div>",1246:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1246\" class=\"NDPrototype NoParameterForm\">GeometricVectors getAccelBiasModelParams()</div><div class=\"TTSummary\">Gets the accelerometer bias model parameters.</div></div>",1247:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1247\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGyroBiasModelParams(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVectors&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gyroscope bias model parameters.</div></div>",1248:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1248\" class=\"NDPrototype NoParameterForm\">GeometricVectors getGyroBiasModelParams()</div><div class=\"TTSummary\">Gets the gyroscope bias model parameters.</div></div>",1249:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1249\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSoftIronMatrixProcessNoise(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Matrix_3x3&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the soft iron matrix process noise.</div></div>",1250:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1250\" class=\"NDPrototype NoParameterForm\">Matrix_3x3 getSoftIronMatrixProcessNoise()</div><div class=\"TTSummary\">Gets the soft iron matrix process noise.</div></div>",1251:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1251\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setFixedReferencePosition(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">FixedReferencePositionData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the FixedReferencePositionData data for the specified command.</div></div>",1252:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1252\" class=\"NDPrototype NoParameterForm\">FixedReferencePositionData getFixedReferencePosition()</div><div class=\"TTSummary\">Gets the FixedReferencePositionData data for the specified command.</div></div>",1253:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1253\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGPSDynamicsMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">GPSDynamicsMode&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the GPSDynamicsMode.</div></div>",1254:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1254\" class=\"NDPrototype NoParameterForm\">InertialTypes::GPSDynamicsMode getGPSDynamicsMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the GPSDynamicsMode data for this device.</div></div>",1255:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1255\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setDevicePowerState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">PowerState&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the PowerState for the specified device.</div></div>",1256:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1256\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">InertialTypes::PowerState getDevicePowerState(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the PowerState for the specified device.</div></div>",1257:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1257\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setDeviceStreamFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">StreamFormat&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the StreamFormat for the specified device.</div></div>",1258:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1258\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">InertialTypes::StreamFormat getDeviceStreamFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> InertialTypes::</td><td class=\"PType\">DeviceSelector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">device</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the StreamFormat for the specified device.</div></div>",1259:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1259\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setSignalConditioningSettings(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SignalConditioningValues&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the signal conditioning settings for the node.</div></div>",1260:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1260\" class=\"NDPrototype NoParameterForm\">SignalConditioningValues getSignalConditioningSettings() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the signal conditioning settings for the node.</div></div>",1261:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1261\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setEnableDisableMeasurements(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EnableDisableMeasurements&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables/disables estimation filter measurement options for the node.</div></div>",1262:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1262\" class=\"NDPrototype NoParameterForm\">EnableDisableMeasurements getEnableDisableMeasurements() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently enabled estimation filter measurement options for the node.</div></div>",1263:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1263\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGravityNoiseMinimum(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">GeometricVector&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the gravity noise minimum for the device.</div></div>",1264:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1264\" class=\"NDPrototype NoParameterForm\">GeometricVector getGravityNoiseMinimum() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the current gravity noise minimum for the device.</div></div>",1265:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1265\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalHeadingUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingData</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external heading update command.</div></div>",1266:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1266\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> sendExternalHeadingUpdate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">HeadingData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">headingData,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeUpdate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">timestamp</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the external heading update command.</div></div>",1267:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1267\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> aidingMeasurementEnabled(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">AidingMeasurementSource&nbsp;</td><td class=\"PName last\">aidingSource</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to check whether the specified aiding source is currently enabled.</div></div>",1268:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1268\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableDisableAidingMeasurement(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">AidingMeasurementSource&nbsp;</td><td class=\"PName last\">aidingSource,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to enable/disable the specified aiding source.</div></div>",1269:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1269\" class=\"NDPrototype NoParameterForm\">AutoAdaptiveFilterOptions getAdaptiveFilterOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">sends the Adaptive Filter Options command (0x0D, 0x53) to get the currently configured auto-adaptive filtering options.</div></div>",1270:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1270\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAdaptiveFilterOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AutoAdaptiveFilterOptions&nbsp;</td><td class=\"PName last\">options</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Adaptive Filter Options command (0x0D, 0x53) to set the auto-adaptive filtering options to the specified values.</div></div>",1271:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1271\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">PositionOffset getMultiAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">receiverId</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">sends the Multi Antenna Offset command (0x0D, 0x54) to get the currently configured antenna offset for the specified receiver ID.</div></div>",1272:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1272\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setMultiAntennaOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">receiverId,</td></tr><tr><td class=\"PType first\">PositionOffset&nbsp;</td><td class=\"PName last\">offset</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">sends the Aiding Measurement Enable command (0x0D, 0x50) to set the position offset of the specified receiver ID.</div></div>",1273:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1273\" class=\"NDPrototype NoParameterForm\">InertialTypes::PpsInputOutput getPpsSource() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the PPS source currently configured on the device.</div></div>",1274:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1274\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPpsSource(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">PpsInputOutput&nbsp;</td><td class=\"PName last\">ppsSource</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the PPS source.</div></div>",1275:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1275\" class=\"NDPrototype NoParameterForm\">InertialTypes::PpsInputOutput getPpsOutput() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the PPS output currently configured on the device.</div></div>",1276:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1276\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setPpsOutput(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">InertialTypes::</td><td class=\"PType\">PpsInputOutput&nbsp;</td><td class=\"PName last\">ppsOutput</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the PPS output configuration.</div></div>",1277:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Gets the currently configured odometer settings.</div></div>",1278:"<div class=\"NDToolTip TFunction LC\"><div class=\"TTSummary\">Set the odometer configuration.</div></div>",1279:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1279\" class=\"NDPrototype NoParameterForm\">AntennaLeverArmCalConfiguration getAntennaLeverArmCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured GNSS antenna lever arm calibration configuration.</div></div>",1280:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1280\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setAntennaLeverArmCal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">AntennaLeverArmCalConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GNSS antenna lever arm calibration configuration.</div></div>",1281:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1281\" class=\"NDPrototype NoParameterForm\">PositionReferenceConfiguration getRelativePositionReference() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the currently configured reference for relative position values.</div></div>",1282:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1282\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setRelativePositionReference(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">PositionReferenceConfiguration&nbsp;</td><td class=\"PName last\">ref</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the reference for relative position values.</div></div>",1283:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1283\" class=\"NDPrototype NoParameterForm\">GnssSignalConfiguration getGnssSignalConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the device\'s current GNSS signal configuration.</div></div>",1284:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1284\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setGnssSignalConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">GnssSignalConfiguration&nbsp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Set the GNSS signal configuration.</div></div>",1285:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1285\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> rtkEnabled() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads whether RTK input is currently enabled on the device.</div></div>",1286:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype1286\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> enableRtk(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">enable</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables RTK input into the device.</div></div>"});