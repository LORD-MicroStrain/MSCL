NDSummary.OnToolTipsLoaded("File:MicroStrain/Wireless/WirelessNode_Impl.h",{6651:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype6651\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">WirelessNode_Impl</div></div></div><div class=\"TTSummary\">Contains the implementation logic for a WirelessNode.&nbsp; Most WirelessNode commands call these commands.</div></div>",6653:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6653\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessNode_Impl(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">NodeAddress&nbsp;</td><td></td><td class=\"PName last\">nodeAddress,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">BaseStation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">basestation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a WirelessNode_Impl object.</div></div>",6655:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6655\" class=\"NDPrototype NoParameterForm\">NodeAddress m_address</div><div class=\"TTSummary\">The address of the Node.</div></div>",6656:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6656\" class=\"NDPrototype NoParameterForm\">BaseStation m_baseStation</div><div class=\"TTSummary\">The Node\'s parent BaseStation.</div></div>",6657:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6657\" class=\"NDPrototype NoParameterForm\">NodeEepromSettings m_eepromSettings</div><div class=\"TTSummary\">The eeprom settings to use for the NodeEeprom object.</div></div>",6658:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6658\" class=\"NDPrototype NoParameterForm\">mutable std::recursive_mutex m_protocolMutex</div><div class=\"TTSummary\">The mutex used when determining the device protocol.</div></div>",6659:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6659\" class=\"NDPrototype NoParameterForm\">mutable std::unique_ptr&lt;WirelessProtocol&gt; m_protocol_lxrs</div><div class=\"TTSummary\">The WirelessProtocol containing all of the protocol commands and info for this Node when the Node is in LXRS radio mode.</div></div>",6660:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6660\" class=\"NDPrototype NoParameterForm\">mutable std::unique_ptr&lt;WirelessProtocol&gt; m_protocol_lxrsPlus</div><div class=\"TTSummary\">The WirelessProtocol containing all of the protocol commands and info for this Node when the Node is in LXRS+ radio mode.</div></div>",6661:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6661\" class=\"NDPrototype NoParameterForm\">mutable std::unique_ptr&lt;NodeEeprom&gt; m_eeprom</div><div class=\"TTSummary\">The NodeEeprom that handles reading and writing eeprom values with the Node and eeprom cache.</div></div>",6662:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6662\" class=\"NDPrototype NoParameterForm\">mutable std::unique_ptr&lt;NodeEepromHelper&gt; m_eepromHelper</div><div class=\"TTSummary\">The NodeEepromHelper used for high level reads and writes on the Node.</div></div>",6663:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype6663\" class=\"NDPrototype NoParameterForm\">mutable std::unique_ptr&lt;NodeFeatures&gt; m_features</div><div class=\"TTSummary\">The NodeFeatures containing the features for this Node.</div></div>",6665:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6665\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> determineProtocols() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Determines the WirelessProtocols to use based on the Node\'s ASPP version.&nbsp; All WirelessProtocol member variables will be updated.</div></div>",6666:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6666\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> NodeEeprom&amp; eeprom() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a reference to the NodeEeprom for this Node.</div></div>",6667:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6667\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> WirelessProtocol&amp; wirelessProtocol()</div><div class=\"TTSummary\">Gets a reference to the WirelessProtocol for this Node for the parent BaseStation\'s current comm protocol setting.</div></div>",6668:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6668\" class=\"NDPrototype NoParameterForm\">NodeEepromHelper&amp; eeHelper() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a reference to the NodeEepromHelper for this Node.</div></div>",6669:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6669\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> NodeFeatures&amp; features() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a reference to the NodeFeatures for this Node.</div></div>",6670:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6670\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessProtocol&amp; protocol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a reference to the WirelessProtocol for this Node.&nbsp; Note: This requires communicating to the Node if creating the protocol for the first time.</div></div>",6671:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6671\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> Timestamp&amp; lastCommunicationTime() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the Timestamp for the last time MSCL communicated with the Node.</div></div>",6672:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6672\" class=\"NDPrototype NoParameterForm\">DeviceState lastDeviceState() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the last known DeviceState for the Node.</div></div>",6673:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6673\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setBaseStation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">BaseStation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">basestation</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the node\'s parent Base Station, which will perform all communication with the Node.</div></div>",6674:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6674\" class=\"NDPrototype NoParameterForm\">BaseStation&amp; getBaseStation()</div><div class=\"TTSummary\">Gets a reference to the BaseStation that is assigned to this Node.</div></div>",6675:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6675\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> hasBaseStation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">BaseStation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">basestation</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks whether the given BaseStation is the same BaseStation that is assigned to this Node.</div></div>",6676:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6676\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> useGroupRead(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">useGroup</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Enables or disables the use of group eeprom read when trying to read a single value (enabled by default).</div></div>",6677:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6677\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> setReadWriteRetries(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">numRetries</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets the number of retry attempts for reading and writing with the Node.</div></div>",6678:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6678\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> getReadWriteRetries() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of retry attempts for reading and writing config options with the Node.</div></div>",6679:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6679\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> useEepromCache(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">bool</span>&nbsp;</td><td class=\"PName last\">useCache</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Sets whether or not to utilize the eeprom cache when configuring this Node (default of enabled).</div></div>",6680:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6680\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">void</span> clearEepromCache()</div><div class=\"TTSummary\">Clears the eeprom cache for this Node.</div></div>",6681:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6681\" class=\"NDPrototype NoParameterForm\">WirelessTypes::EepromMap getEepromCache() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a copy of the eeprom cache as a WirelessTypes::EepromMap.</div></div>",6682:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6682\" class=\"NDPrototype NoParameterForm\">NodeAddress nodeAddress() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the node address of the Node.</div></div>",6683:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6683\" class=\"NDPrototype NoParameterForm\">WirelessTypes::Frequency frequency() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::Frequency that the Node is believed to be on.&nbsp; If the frequency is unknown, it will be read from Eeprom.</div></div>",6684:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6684\" class=\"NDPrototype NoParameterForm\">WirelessTypes::CommProtocol communicationProtocol() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::CommProtocol that the Node is currently set to use.</div></div>",6685:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6685\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> Version firmwareVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the firmware Version of the Node.</div></div>",6686:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6686\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> WirelessModels::NodeModel model() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessModels::NodeModel of the Node.</div></div>",6687:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6687\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> std::<span class=\"SHKeyword\">string</span> serial() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the serial number of the Node.</div></div>",6688:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6688\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::MicroControllerType microcontroller() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::MicroControllerType of the Node.</div></div>",6689:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6689\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> RadioFeatures radioFeatures() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the RadioFeatures of the Node.</div></div>",6690:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6690\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint64</span> dataStorageSize() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of bytes available for data storage on the Node.</div></div>",6691:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6691\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::RegionCode regionCode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the region code currently set on the Node.</div></div>",6692:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6692\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> verifyConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">WirelessNodeConfig&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">config,</td></tr><tr><td class=\"first\"></td><td class=\"PType\">ConfigIssues&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">outIssues</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks whether the settings in the given WirelessNodeConfig are ok to be written to the Node.&nbsp; Options that are set will also be validated against each other. If an option that needs to be validated isn\'t currently set, it will be read from the Node.</div></div>",6693:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6693\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> applyConfig(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">WirelessNodeConfig&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">config</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Applies a WirelessNodeConfig to the Node.</div></div>",6694:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6694\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> getNumDatalogSessions()</div><div class=\"TTSummary\">Reads the number of datalog sessions that are currently stored on the Node.</div></div>",6695:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6695\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual float</span> percentFull()</div><div class=\"TTSummary\">Gets the internal datalogging memory percentage that is currently stored on the Node.</div></div>",6696:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6696\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DefaultMode getDefaultMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::DefaultMode that is currently set on the Node.</div></div>",6697:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6697\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> getInactivityTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the user inactivity timeout (in seconds) that is currently set on the Node.</div></div>",6698:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6698\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint8</span> getCheckRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the check radio interval that is currently set on the Node.</div></div>",6699:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6699\" class=\"NDPrototype NoParameterForm\">WirelessTypes::TransmitPower getTransmitPower() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::TransmitPower that is currently set on the Node.</div></div>",6700:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6700\" class=\"NDPrototype NoParameterForm\">WirelessTypes::SamplingMode getSamplingMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::SamplingMode that is currently set on the Node.</div></div>",6701:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6701\" class=\"NDPrototype NoParameterForm\">ChannelMask getActiveChannels() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the ChannelMask currently set on the Node, representing which channels are enabled and disabled.</div></div>",6702:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6702\" class=\"NDPrototype NoParameterForm\">WirelessTypes::WirelessSampleRate getSampleRate() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::WirelessSampleRate currently set on the Node.</div></div>",6703:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6703\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> getNumSweeps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of sweeps currently set on the Node, which affects the duration of sampling if unlimited duration is disabled, or the duration of each burst if the sampling mode is Sync Sampling Burst.</div></div>",6704:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6704\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">bool</span> getUnlimitedDuration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets whether or not unlimited sampling duration is enabled on the Node.</div></div>",6705:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6705\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DataFormat getDataFormat() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::DataFormat that is currently set on the Node.</div></div>",6706:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6706\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DataCollectionMethod getDataCollectionMethod() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::DataCollectionMethod that is currently set on the Node, representing how the data will be collected.&nbsp; Note: this has no affect if the sampling mode is Armed Datalogging, as this mode only operates in &quot;log only&quot;.</div></div>",6707:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6707\" class=\"NDPrototype NoParameterForm\">TimeSpan getTimeBetweenBursts() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the amount of time between each burst currently set on the Node.</div></div>",6708:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6708\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> getLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the lost beacon timeout, in minutes, currently set on the Node.</div></div>",6709:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6709\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> getPullUpResistor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets whether or not the pull-up resistor is enabled on the Node.</div></div>",6710:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6710\" class=\"NDPrototype NoParameterForm\">WirelessTypes::SensorOutputMode getSensorOutputMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the WirelessTypes::SensorOutputMode currently set on the Node.</div></div>",6711:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6711\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::InputRange getInputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the input range of the specified ChannelMask.</div></div>",6712:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6712\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint16</span> getHardwareOffset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the hardware offset of the specified ChannelMask currently set on the Node.</div></div>",6713:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6713\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::Filter getAntiAliasingFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the Anti-Aliasing Filter of the specified ChannelMask currently set on the Node.</div></div>",6714:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6714\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::Filter getLowPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the Low-Pass Filter of the specified ChannelMask currently set on the Node.</div></div>",6715:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6715\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::HighPassFilter getHighPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the High-Pass Filter of the specified ChannelMask currently set on the Node.</div></div>",6716:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6716\" class=\"NDPrototype NoParameterForm\">WirelessTypes::ChannelFrequencyClass getCfcFilterConfiguration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the channel frequency class filter option set on the Node.&nbsp; See Also: NodeFeatures::supportsCfcFilterConfiguration</div></div>",6717:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6717\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint16</span> getDebounceFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the Debounce Filter of the specified ChannelMask currently set on the Node.</div></div>",6718:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6718\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">float</span> getGaugeFactor(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the gauge factor of the specified ChannelMask currently set on the Node.</div></div>",6719:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6719\" class=\"NDPrototype NoParameterForm\">WirelessTypes::Voltage getExcitationVoltage() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the Excitation WirelessTypes::Voltage currently set on the Node.</div></div>",6720:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6720\" class=\"NDPrototype NoParameterForm\">WirelessTypes::Voltage getAdcVoltageRef() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the ADC WirelessTypes::Voltage Reference of the Node.</div></div>",6721:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6721\" class=\"NDPrototype NoParameterForm\">WirelessTypes::Voltage getGainAmplifierVoltageRef() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the Gain Amplifier WirelessTypes::Voltage Reference of the Node.</div></div>",6722:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6722\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> getGaugeResistance() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the gauge resistance currently set on the Node.</div></div>",6723:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6723\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> getNumActiveGauges() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the Number of Active Gauges currently set on the Node.</div></div>",6724:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6724\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">LinearEquation getLinearEquation(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the linear equation of the specified ChannelMask currently set on the Node.</div></div>",6725:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6725\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_Unit getUnit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the unit of the specified ChannelMask currently set on the Node.</div></div>",6726:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6726\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_EquationType getEquationType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the WirelessTypes::CalCoef_EquationType of the specified ChannelMask currently set on the Node.</div></div>",6727:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6727\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">LinearEquation getFactoryCalibrationLinearEq(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the factory-calibrated linear equation for the specified ChannelMask.</div></div>",6728:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6728\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_Unit getFactoryCalibrationUnit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the factory calibration unit for the specified ChannelMask.</div></div>",6729:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6729\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::CalCoef_EquationType getFactoryCalibrationEqType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the factory calibration WirelessTypes::CalCoef_EquationType for the specified ChannelMask.</div></div>",6730:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6730\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::SettlingTime getFilterSettlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the filter settling time of the specified ChannelMask.</div></div>",6731:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6731\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessTypes::ThermocoupleType getThermocoupleType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the WirelessTypes::ThermocoupleType of the specified ChannelMask currently set on the Node.</div></div>",6732:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6732\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">TempSensorOptions getTempSensorOptions(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the TempSensorOptions of the specified ChannelMask currently set on the Node.</div></div>",6733:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6733\" class=\"NDPrototype NoParameterForm\">FatigueOptions getFatigueOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the FatigueOptions currently set on the Node.</div></div>",6734:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6734\" class=\"NDPrototype NoParameterForm\">HistogramOptions getHistogramOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the HistogramOptions currently set on the Node.</div></div>",6735:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6735\" class=\"NDPrototype NoParameterForm\">ActivitySense getActivitySense() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the ActivitySense options currently set on the Node.</div></div>",6736:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6736\" class=\"NDPrototype NoParameterForm\">EventTriggerOptions getEventTriggerOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the EventTriggerOptions currently set on the Node.</div></div>",6737:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6737\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint16</span> getDiagnosticInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the interval (in seconds) at which the diagnostic info is configured to be sent.</div></div>",6738:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6738\" class=\"NDPrototype NoParameterForm\">WirelessTypes::StorageLimitMode getStorageLimitMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Rates the WirelessTypes::StorageLimitMode that the Node is configured for.&nbsp; This determines what happens when the datalogging storage limit is reached on the Node.</div></div>",6739:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6739\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">uint32</span> getSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the sensor delay (in microseconds) that is currently set on the Node.</div></div>",6740:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6740\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DataMode getDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::DataMode that is currently set on the Node.</div></div>",6741:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6741\" class=\"NDPrototype NoParameterForm\">WirelessTypes::WirelessSampleRate getDerivedDataRate() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::WirelessSampleRate for all Derived Data Channels that is currently set on the Node.</div></div>",6742:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6742\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">ChannelMask getDerivedChannelMask(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedCategory&nbsp;</td><td class=\"PName last\">category</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads the ChannelMask for an individual WirelessTypes::DerivedCategory that is currently set on the Node.&nbsp; This represents which of the actual Node\'s channels are set to be mapped to derived channels.&nbsp; For example, if the mask for RMS has ch1 and ch3 active, ch1RMS and ch3RMS channels will be output.</div></div>",6743:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6743\" class=\"NDPrototype NoParameterForm\">WirelessTypes::DerivedVelocityUnit getDerivedVelocityUnit() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Reads the WirelessTypes::DerivedVelocityUnit which indicates which unit the Velocity derived channel is set to.</div></div>",6744:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6744\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> PingResponse ping()</div><div class=\"TTSummary\">Performs a Long Ping command on the Node to check the communication between the Base Station and the Node.</div></div>",6745:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6745\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> sleep()</div><div class=\"TTSummary\">Puts the Node into a low power, sleep mode.&nbsp; This command attempts to ping the node before sending the sleep command, to verify communication.</div></div>",6746:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6746\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual void</span> cyclePower()</div><div class=\"TTSummary\">Cycles the power on the Node.&nbsp; Many configuration changes that are applied to the node do not take affect until the power is cycled.</div></div>",6747:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6747\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual void</span> resetRadio()</div><div class=\"TTSummary\">Resets the radio on the Node.</div></div>",6748:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6748\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> changeFrequency(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Frequency&nbsp;</td><td class=\"PName last\">frequency</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Changes the radio frequency of the Node.</div></div>",6749:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6749\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> SetToIdleStatus setToIdle()</div><div class=\"TTSummary\">Attempts to set the Node to the Idle state so that it can be communicated with (stops it sampling, wakes it up if asleep).</div></div>",6750:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6750\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual void</span> erase()</div><div class=\"TTSummary\">Erases all logged data on the Node.</div></div>",6751:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6751\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> startNonSyncSampling()</div><div class=\"TTSummary\">Starts the Node in Non-Synchronized Sampling Mode.</div></div>",6752:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6752\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual void</span> clearHistogram()</div><div class=\"TTSummary\">Clears the Histogram on the Node.</div></div>",6753:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6753\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> AutoBalanceResult autoBalance(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">float</span>&nbsp;</td><td></td><td class=\"PName last\">targetPercent</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Performs an Auto Balance command on a specified channel on the Node.</div></div>",6754:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6754\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> AutoCalResult_shmLink autoCal_shmLink()</div><div class=\"TTSummary\">Performs automatic calibration for the SHM-Link Wireless Node.</div></div>",6755:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6755\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> AutoCalResult_shmLink201 autoCal_shmLink201()</div><div class=\"TTSummary\">Performs automatic calibration for the SHM-Link-201 Wireless Node.</div></div>",6756:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6756\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> AutoShuntCalResult autoShuntCal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ShuntCalCmdInfo&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">commandInfo</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Performs automatic shunt calibration for a specified ChannelMask on supported Nodes.</div></div>",6757:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6757\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">WirelessPollData poll(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Polls the WirelessNode to get a single sweep of calibrated data.</div></div>",6758:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6758\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint16</span> readEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">location</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads a uint16 from the given eeprom location of the node. This may use a page download or a read eeprom command.&nbsp; If the value stored in the eeprom cache is still valid, this will be returned instead.</div></div>",6759:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6759\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> Value readEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">location</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Reads a value from the given EepromLocation of the node. This may use a page download or a read eeprom command.&nbsp; If the value stored in the eeprom cache is still valid, this will be returned instead.</div></div>",6760:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6760\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> writeEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">location,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint16</span>&nbsp;</td><td class=\"PName last\">value</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes a uint16 to the given eeprom location of the node.&nbsp; If successful, the cache will be updated with the changed value as well.</div></div>",6761:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6761\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> writeEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">location,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">Value&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">val</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Writes a value to the given EepromLocation of the node.&nbsp; If successful, the cache will be updated with the changed value as well.</div></div>",6762:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6762\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual void</span> getDiagnosticInfo(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">ChannelData&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Performs an immediate request for the Node\'s Diagnostic Info.</div></div>",6763:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6763\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> testCommProtocol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Tests if the Node will still be able to communicate after changing the Node\'s communication protocol.&nbsp; This is recommended to be used before changing communication protocol as the range can change between protocol modes.&nbsp; Note: Both the Node and BaseStation will return to the current protocol after this test.</div></div>"});