NDSummary.OnToolTipsLoaded("File:MicroStrain/Wireless/Features/NodeFeatures.h",{4538:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype4538\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">NodeFeatures</div></div></div><div class=\"TTSummary\">Contains information on which features are supported by a WirelessNode.</div></div>",4540:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4540\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">NodeFeatures(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">NodeInfo&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">info</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a NodeFeatures object.</div></div>",4542:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype4542\" class=\"NDPrototype NoParameterForm\">NodeInfo m_nodeInfo</div><div class=\"TTSummary\">The NodeInfo object containing basic information retreived from eeprom about the Node.</div></div>",4543:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype4543\" class=\"NDPrototype NoParameterForm\">WirelessChannels m_channels</div><div class=\"TTSummary\">Contains all of the supported channels for this Node.</div></div>",4544:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype4544\" class=\"NDPrototype NoParameterForm\">ChannelGroups m_channelGroups</div><div class=\"TTSummary\">Contains all of the ChannelGroups that are supported by this Node.</div></div>",4546:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4546\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> std::unique_ptr&lt;NodeFeatures&gt; create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">NodeInfo&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">info</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Builds and returns a NodeFeatures pointer based on the given parameters.</div></div>",4547:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4547\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> addCalCoeffChannelGroup(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td></td><td class=\"PName last\">channelNumber,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">name,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">slopeEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">actionIdEeprom</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a cal coefficient (Linear Equation, unit, equation type) to the channel groups for the specified channel.</div></div>",4548:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4548\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::SettlingTime maxFilterSettlingTime_A(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max filter settling time allowed by the given SampleRate.&nbsp; This is version A of this function. Different nodes use different versions.</div></div>",4549:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4549\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::SettlingTime maxFilterSettlingTime_B(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max filter settling time allowed by the given SampleRate.&nbsp; This is version B of this function. Different nodes use different versions.</div></div>",4550:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4550\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime_A(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td></td><td class=\"PName last\">settlingTime,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> WirelessTypes::</td><td class=\"PType\">WirelessSampleRates&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rates</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max WirelessTypes::WirelessSampleRate allowed by the given WirelessTypes::SettlingTime.&nbsp; This is version A of this function. Different nodes use different versions.</div></div>",4551:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4551\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime_B(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td></td><td class=\"PName last\">settlingTime,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> WirelessTypes::</td><td class=\"PType\">WirelessSampleRates&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rates</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max WirelessTypes::WirelessSampleRate allowed by the given WirelessTypes::SettlingTime.&nbsp; This is version B of this function. Different nodes use different versions.</div></div>",4552:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4552\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint32</span> normalizeNumSweeps(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">sweeps</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the number of sweeps so that it is within range and a multiple of 100 (rounds up to next multiple).</div></div>",4553:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4553\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">TimeSpan normalizeTimeBetweenBursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeSpan&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">time</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes a TimeSpan so that it is within an acceptable range for setting the timeBetweenBursts.&nbsp; A valid range is between 1 second and 24 hours. Seconds above 32767 will be rounded to minutes.&nbsp; When setting the time between bursts, you should also call minTimeBetweenBursts and verify it is greater than this.</div></div>",4554:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4554\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">const</span> EepromLocation&amp; findEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td></td><td class=\"PName last\">setting,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Finds the EepromLocation for the provided setting and channel mask pair.</div></div>",4555:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4555\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> anyChannelGroupSupports(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td class=\"PName last\">setting</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if any channel group on the Node supports the given WirelessTypes::ChannelGroupSetting.</div></div>",4556:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4556\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> ramBufferSize() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the RAM buffer size (in bytes) for the Node.</div></div>",4557:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4557\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> anyChannelGroupSupports(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td class=\"PName last\">setting,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if any channel group, with the specified channel number, supports the given WirelessTypes::ChannelGroupSetting.</div></div>",4558:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4558\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> WirelessChannels&amp; channels() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a reference to the WirelessChannels of this Node.</div></div>",4559:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4559\" class=\"NDPrototype NoParameterForm\">ChannelGroups channelGroups() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the ChannelGroups supported by this Node.</div></div>",4560:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4560\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::ChannelType channelType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the WirelessTypes::ChannelType for the requested channel number.</div></div>",4561:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4561\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsChannelSetting(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td></td><td class=\"PName last\">setting,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if the Node supports a given WirelessTypes::ChannelGroupSetting for the given ChannelMask.</div></div>",4562:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4562\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Input Range for any of its ChannelGroups.</div></div>",4563:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4563\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRangePerExcitationVoltage() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Input Range for any of its ChannelGroups, and has different input ranges depending on a configurable excitation voltage.</div></div>",4564:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4564\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHardwareOffset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Hardware Offset for any of its ChannelGroups.</div></div>",4565:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4565\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAntiAliasingFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Anti-Aliasing Filter for any of its ChannelGroups.</div></div>",4566:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4566\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLowPassFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Low-Pass Filter for any of its ChannelGroups.</div></div>",4567:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4567\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHighPassFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports High-Pass Filter for any of its ChannelGroups.</div></div>",4568:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4568\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGaugeFactor() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Gauge Factor for any of its ChannelGroups.</div></div>",4569:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4569\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGaugeResistance() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Gauge Resistance option.</div></div>",4570:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4570\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNumActiveGauges() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Number of Active Gauges option.</div></div>",4571:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4571\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Lost Beacon Timeout option.</div></div>",4572:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4572\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPullUpResistor() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Pull-up Resistor option.</div></div>",4573:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4573\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFilterSettlingTime() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Filter Settling Time for any of its ChannelGroups.</div></div>",4574:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4574\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsThermocoupleType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Thermocouple Type for any of its ChannelGroups.</div></div>",4575:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4575\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsTempSensorOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the TempSensorOptions configuration for any of its ChannelGroups.</div></div>",4576:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4576\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDebounceFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Debounce Filter configuration for any of its ChannelGroups.</div></div>",4577:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4577\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports FatigueOptions configuration.</div></div>",4578:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4578\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsYoungsModConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Young\'s Modulus (part of FatigueOptions) configuration.</div></div>",4579:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4579\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPoissonsRatioConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Poisson\'s Ratio (part of FatigueOptions) configuration.</div></div>",4580:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4580\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueDebugModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports enabling Debug Mode (part of FatigueOptions) configuration.</div></div>",4581:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4581\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Fatigue Mode (part of FatigueOptions) configuration.</div></div>",4582:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4582\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports HistogramOptions configuration.</div></div>",4583:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4583\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramRateConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Histogram transmit rate (part of HistogramOptions) configuration.</div></div>",4584:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4584\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramEnableConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports turning Histograms on and off (part of FatigueOptions).</div></div>",4585:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4585\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsActivitySense() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the ActivitySense feature.</div></div>",4586:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4586\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoBalance() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Auto Balance command for any of its ChannelGroups.</div></div>",4587:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4587\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLegacyShuntCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the legacy Shunt Cal for any of its ChannelGroups.</div></div>",4588:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4588\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoCal_shm() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoCal SHM-Link command.</div></div>",4589:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4589\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoCal_shm201() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoCal SHM-Link-201 command.</div></div>",4590:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4590\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoShuntCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports AutoShuntCal on any of this ChannelGroups.</div></div>",4591:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4591\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLimitedDuration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports setting a limited duration of sampling.</div></div>",4592:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4592\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEventTrigger() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Event Trigger sampling.</div></div>",4593:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4593\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDiagnosticInfo() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports sending Diagnostic Info.</div></div>",4594:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4594\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLoggedData() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports logging to internal memory.</div></div>",4595:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4595\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorDelayConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of sensor delay.</div></div>",4596:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4596\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorDelayAlwaysOn() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports setting the sensor delay value to &quot;Always On.&quot;</div></div>",4597:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4597\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorOutputMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the Sensor Output Mode.</div></div>",4598:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4598\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsChannel(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a specific channel is supported (can be enabled) by this Node.</div></div>",4599:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4599\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsSamplingMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::SamplingMode is supported by this Node.</div></div>",4600:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4600\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsSampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">WirelessSampleRate&nbsp;</td><td class=\"PName last\">sampleRate,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a sample rate is supported by the Node for the given WirelessTypes::SamplingMode.</div></div>",4601:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4601\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsCommunicationProtocol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">protocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::CommProtocol is supported by this Node.</div></div>",4602:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4602\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td class=\"PName last\">dataFormat</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataFormat is supported by this Node.</div></div>",4603:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4603\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDefaultMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DefaultMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DefaultMode is supported by this Node.</div></div>",4604:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4604\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataCollectionMethod(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">collectionMethod</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataCollectionMethod is supported by this Node.</div></div>",4605:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4605\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">TransmitPower&nbsp;</td><td class=\"PName last\">power,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::TransmitPower is supported by this Node.</div></div>",4606:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4606\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataMode is supported by this Node.</div></div>",4607:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4607\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsTransducerType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">TransducerType&nbsp;</td><td class=\"PName last\">transducerType</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::TransducerType is supported by this Node.</div></div>",4608:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4608\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">FatigueMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::FatigueMode is supported by this Node.</div></div>",4609:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4609\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::InputRange is supported by this Node for the given ChannelMask.</div></div>",4610:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4610\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td></td><td class=\"PName last\">excitationVoltage</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::InputRange is supported by this Node for the given ChannelMask.</div></div>",4611:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4611\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCentisecondEventDuration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node configures event duration in 10s of milliseconds or not.</div></div>",4612:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4612\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGetDiagnosticInfo() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Get Diagnostic Info command.</div></div>",4613:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4613\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNonSyncLogWithTimestamps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the version of Non-Sync Sampling that will add timestamps when logging.&nbsp; If the Node does not support this, when downloading logged data from the Node, no timestamp information will be given.</div></div>",4614:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4614\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedCategory(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedCategory&nbsp;</td><td class=\"PName last\">category</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if the Node supports a specific WirelessTypes::DerivedCategory.</div></div>",4615:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4615\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsRawDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports any form of the Raw Data Mode (raw only, raw + derived, etc).</div></div>",4616:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4616\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports any form of the Derived Data Mode (derived only, raw + derived, etc).</div></div>",4617:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4617\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedVelocityUnitConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the Derived Velocity Unit.</div></div>",4618:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4618\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsExcitationVoltageConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of its Excitation Voltage.</div></div>",4619:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4619\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLowBatteryThresholdConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of its low battery threshold.</div></div>",4620:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4620\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td></td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given &lt;SamplingMode&gt;, ChannelMask, and WirelessTypes::DataCollectionMethod.</div></div>",4621:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4621\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td class=\"PName last\">filterSettlingTime,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given WirelessTypes::SettlingTime.</div></div>",4622:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4622\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRateForLowPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Filter&nbsp;</td><td></td><td class=\"PName last\">lowPassFilter,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td></td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given Low Pass Filter.</div></div>",4623:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4623\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::SettlingTime maxFilterSettlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::SettlingTime available for the given SampleRate.</div></div>",4624:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4624\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> minInactivityTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum inactivity timeout (in seconds) that is supported.</div></div>",4625:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4625\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> minLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum lost beacon timeout (in minutes) that is supported.&nbsp; Note: A value of 0 disable the lost beacon timeout.</div></div>",4626:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4626\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> maxLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum lost beacon timeout (in minutes) that is supported.</div></div>",4627:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4627\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> minCheckRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum check radio interval (in seconds) that is supported.</div></div>",4628:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4628\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> maxCheckRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum check radio interval (in seconds) that is supported.</div></div>",4629:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4629\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> minSweeps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum number of sweeps that can be assigned for the duration of a continuous sampling session.</div></div>",4630:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4630\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxSweeps(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum number of sweeps that can be assigned for a given WirelessTypes::SamplingMode.&nbsp; This is the duration of each burst if in Burst Sync Sampling mode, or the total duration of sampling in other sampling modes.</div></div>",4631:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4631\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxSweepsPerBurst(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum number of sweeps per burst that can be assigned for a Burst Sync Sampling session.</div></div>",4632:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4632\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> TimeSpan minTimeBetweenBursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawChannels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedChannelMasks&nbsp;</td><td></td><td class=\"PName last\">derivedChannelMasks,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawSampleRate,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td></td><td class=\"PName last\">sweepsPerBurst,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td></td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum time that can be assigned for a Burst Sync Sampling session.</div></div>",4633:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4633\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> minSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum sensor delay value (in microseconds) that is supported.</div></div>",4634:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4634\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> maxSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum sensor delay value (in microseconds) that is supported.</div></div>",4635:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4635\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxEventTriggerTotalDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawChannels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedChannelMasks&nbsp;</td><td></td><td class=\"PName last\">derivedChannelMasks,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawSampleRate,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">derivedDataRate</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the max event trigger duration (in milliseconds) that can be applied for both the pre and post event durations (combined).</div></div>",4636:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4636\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> normalizeEventDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">duration</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the Event Trigger duration so that it is an acceptable value.</div></div>",4637:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4637\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> normalizeSensorDelay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">delay</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the sensor delay so that it is an acceptable value.</div></div>",4638:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4638\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numDamageAngles() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of damage angles (see FatigueOptions) on this Node.</div></div>",4639:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4639\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numSnCurveSegments() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of Sn Curve segments (see FatigueOptions) on this Node.</div></div>",4640:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4640\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numEventTriggers() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of supported event triggers on this Node.</div></div>",4641:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4641\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DefaultModes defaultModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DefaultModes that are supported by this Node.</div></div>",4642:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4642\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataCollectionMethods dataCollectionMethods() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DataCollectionMethods that are supported by this Node.</div></div>",4643:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4643\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataFormats dataFormats() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DataFormats that are supported by this Node.</div></div>",4644:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4644\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::SamplingModes samplingModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::SamplingModes that are supported by this Node.</div></div>",4645:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4645\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates sampleRates(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::WirelessSampleRates that are supported by this Node for the given sampling mode.</div></div>",4646:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4646\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates derivedDataRates() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::WirelessSampleRates that are supported by this Node for Derived Channels.&nbsp; These are the rates that the Derived Data will be calculated/sent. The standard sampleRates still apply in derived mode and control the sample rate of the raw channels used in the derived data calculations.</div></div>",4647:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4647\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransmitPowers transmitPowers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::TransmitPowers that are supported by this Node, for the given WirelessTypes::CommProtocol.&nbsp; Note: This list is dependent on the WirelessTypes::RegionCode of the device. If this changes, this function should be called again.</div></div>",4648:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4648\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransmitPowers transmitPowers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::TransmitPowers that are supported by this Node, for the given WirelessTypes::RegionCode and WirelessTypes::CommProtocol.</div></div>",4649:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4649\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::CommProtocols commProtocols() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::CommProtocols that are supported by this Node.</div></div>",4650:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4650\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::SensorOutputModes sensorOutputModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::SensorOutputModes that are supported by this Node.</div></div>",4651:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4651\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates histogramTransmitRates() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Histogram Transmit Rates that are supported by this Node.</div></div>",4652:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4652\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::FatigueModes fatigueModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::FatigueModes that are supported by this Node.</div></div>",4653:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4653\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Filters antiAliasingFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Anti-Aliasing WirelessTypes::Filters that are supported by this Node.</div></div>",4654:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4654\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Filters lowPassFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Low-Pass WirelessTypes::Filters that are supported by this Node.</div></div>",4655:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4655\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::HighPassFilters highPassFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the High-Pass WirelessTypes::Filters that are supported by this Node.</div></div>",4656:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4656\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::StorageLimitModes storageLimitModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::StorageLimitModes that are supported by this Node.</div></div>",4657:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4657\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> InputRanges inputRanges(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of InputRanges that are supported by this Node for the specified channel mask.</div></div>",4658:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4658\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> InputRanges inputRanges(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td></td><td class=\"PName last\">excitationVoltage</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of WirelessTypes::InputRanges that are supported by this Node for the specified channel mask, for the given Excitation WirelessTypes::Voltage.</div></div>",4659:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4659\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataModes dataModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::DataModes that are supported by this Node.</div></div>",4660:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4660\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransducerTypes transducerTypes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::TransducerTypes that are supported by this Node.</div></div>",4661:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4661\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DerivedChannelMasks channelsPerDerivedCategory() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a map of WirelessTypes::DerivedCategory to ChannelMasks that are supported by this Node.&nbsp; The ChannelMask indicates the raw channels that are available for the derived category.</div></div>",4662:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4662\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Voltages excitationVoltages() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::Voltages that are supported by the Node for configuration.</div></div>",4663:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4663\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::VoltageType adcVoltageInputType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the input voltage type of the ADC for this node.</div></div>",4664:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4664\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower maxTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::TransmitPower that is supported for the given parameters.</div></div>",4665:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4665\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower maxTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::TransmitPower that is supported for the given parameters, using the Node\'s current region code.</div></div>",4666:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4666\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower minTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum WirelessTypes::TransmitPower that is supported for the given parameters.</div></div>",4667:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4667\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower minTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum WirelessTypes::TransmitPower that is supported for the given parameters, using the Node\'s current region code.</div></div>",4668:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4668\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNewTransmitPowers() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the new transmit powers (true), or the old ones (false).</div></div>",4669:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4669\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoBalance2() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoBalance (Version 2) command.</div></div>",4670:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4670\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSleepIntervalSeconds() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports a sleep interval eeprom directly in seconds.</div></div>",4671:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4671\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEepromCommitViaRadioReset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if eeprom changes can be committed by only cycling the radio, instead of cycling power.</div></div>",4672:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4672\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFlashId() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Flash ID eeprom.</div></div>",4673:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4673\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsStorageLimitModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuring storage limit mode.</div></div>",4674:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4674\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> datalogDownloadVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the version of datalogging download to use.</div></div>",4675:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4675\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> sensorDelayVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the version of sensor delay that the Node supports.</div></div>",4676:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4676\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> usesLegacySensorDelayAlwaysOn() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node uses the legacy value of 10,000 for always on (true) or the new value of 65,535 for always on (false).</div></div>",4677:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4677\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> usesFloatEventTriggerVal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node uses floating point for event trigger values.&nbsp; Older nodes used uint16 (bits).</div></div>",4678:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4678\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> onlySupportsRawDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the raw data mode is the only data mode supported.</div></div>",4679:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4679\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDataModeEeprom() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Data Mode eeprom location is supported.</div></div>",4680:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4680\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCommProtocolEeprom() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Communication Protocol eeprom location is supported.</div></div>",4681:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype4681\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEeprom1024AndAbove() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports reading eeprom location 1024 and above.</div></div>"});