NDSummary.OnToolTipsLoaded("CClass:NodeFeatures",{5947:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype5947\"><div class=\"CPEntry TClass Current\"><div class=\"CPName\">NodeFeatures</div></div></div><div class=\"TTSummary\">Contains information on which features are supported by a WirelessNode.</div></div>",5949:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5949\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">NodeFeatures(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">NodeInfo&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">info</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Creates a NodeFeatures object.</div></div>",5951:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype5951\" class=\"NDPrototype NoParameterForm\">NodeInfo m_nodeInfo</div><div class=\"TTSummary\">The NodeInfo object containing basic information retreived from eeprom about the Node.</div></div>",5952:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype5952\" class=\"NDPrototype NoParameterForm\">WirelessChannels m_channels</div><div class=\"TTSummary\">Contains all of the supported channels for this Node.</div></div>",5953:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype5953\" class=\"NDPrototype NoParameterForm\">ChannelGroups m_channelGroups</div><div class=\"TTSummary\">Contains all of the ChannelGroups that are supported by this Node.</div></div>",5955:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5955\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> std::unique_ptr&lt;NodeFeatures&gt; create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">NodeInfo&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">info</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Builds and returns a NodeFeatures pointer based on the given parameters.</div></div>",5956:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5956\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> addCalCoeffChannelGroup(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td></td><td class=\"PName last\">channelNumber,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">name,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">slopeEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">actionIdEeprom</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a cal coefficient (Linear Equation, unit, equation type) to the channel groups for the specified channel.</div></div>",5957:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5957\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> addCalCoeffChannelGroup_withFactoryCal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td></td><td class=\"PName last\">channelNumber,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> std::</td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">name,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">slopeEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">actionIdEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">factorySlopeEeprom,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">EepromLocation&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">factoryActionIdEeprom</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Adds a cal coefficient with factory cal values (Linear Equation, unit, equation type, factory cal) to the channel groups for the specified channel.</div></div>",5958:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5958\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::SettlingTime maxFilterSettlingTime_A(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max filter settling time allowed by the given SampleRate.&nbsp; This is version A of this function. Different nodes use different versions.</div></div>",5959:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5959\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::SettlingTime maxFilterSettlingTime_B(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max filter settling time allowed by the given SampleRate.&nbsp; This is version B of this function. Different nodes use different versions.</div></div>",5960:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5960\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime_A(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td></td><td class=\"PName last\">settlingTime,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> WirelessTypes::</td><td class=\"PType\">WirelessSampleRates&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rates</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max WirelessTypes::WirelessSampleRate allowed by the given WirelessTypes::SettlingTime.&nbsp; This is version A of this function. Different nodes use different versions.</div></div>",5961:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5961\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">static</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime_B(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td></td><td class=\"PName last\">settlingTime,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span> WirelessTypes::</td><td class=\"PType\">WirelessSampleRates&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rates</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Gets the max WirelessTypes::WirelessSampleRate allowed by the given WirelessTypes::SettlingTime.&nbsp; This is version B of this function. Different nodes use different versions.</div></div>",5962:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5962\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">uint32</span> normalizeNumSweeps(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">sweeps</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the number of sweeps so that it is within range and a multiple of 100 (rounds up to next multiple).</div></div>",5963:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5963\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">TimeSpan normalizeTimeBetweenBursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">TimeSpan&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">time</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes a TimeSpan so that it is within an acceptable range for setting the timeBetweenBursts.&nbsp; A valid range is between 1 second and 24 hours. Seconds above 32767 will be rounded to minutes.&nbsp; When setting the time between bursts, you should also call minTimeBetweenBursts and verify it is greater than this.</div></div>",5964:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5964\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">const</span> EepromLocation&amp; findEeprom(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td></td><td class=\"PName last\">setting,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Finds the EepromLocation for the provided setting and channel mask pair.</div></div>",5965:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5965\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> anyChannelGroupSupports(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td class=\"PName last\">setting</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if any channel group on the Node supports the given WirelessTypes::ChannelGroupSetting.</div></div>",5966:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5966\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> ramBufferSize() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the RAM buffer size (in bytes) for the Node.</div></div>",5967:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5967\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">bool</span> anyChannelGroupSupports(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td class=\"PName last\">setting,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if any channel group, with the specified channel number, supports the given WirelessTypes::ChannelGroupSetting.</div></div>",5968:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5968\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">const</span> WirelessChannels&amp; channels() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a reference to the WirelessChannels of this Node.</div></div>",5969:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5969\" class=\"NDPrototype NoParameterForm\">ChannelGroups channelGroups() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the ChannelGroups supported by this Node.</div></div>",5970:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5970\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::ChannelType channelType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the WirelessTypes::ChannelType for the requested channel number.</div></div>",5971:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5971\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsChannelSetting(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">ChannelGroupSetting&nbsp;</td><td></td><td class=\"PName last\">setting,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">mask</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if the Node supports a given WirelessTypes::ChannelGroupSetting for the given ChannelMask.</div></div>",5972:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5972\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Input Range for any of its ChannelGroups.</div></div>",5973:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5973\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRangePerExcitationVoltage() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Input Range for any of its ChannelGroups, and has different input ranges depending on a configurable excitation voltage.</div></div>",5974:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5974\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHardwareOffset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Hardware Offset for any of its ChannelGroups.</div></div>",5975:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5975\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAntiAliasingFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Anti-Aliasing Filter for any of its ChannelGroups.</div></div>",5976:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5976\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLowPassFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Low-Pass Filter for any of its ChannelGroups.</div></div>",5977:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5977\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHighPassFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports High-Pass Filter for any of its ChannelGroups.</div></div>",5978:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5978\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGaugeFactor() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Gauge Factor for any of its ChannelGroups.</div></div>",5979:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5979\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGaugeResistance() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Gauge Resistance option.</div></div>",5980:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5980\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNumActiveGauges() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Number of Active Gauges option.</div></div>",5981:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5981\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Lost Beacon Timeout option.</div></div>",5982:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5982\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPullUpResistor() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Pull-up Resistor option.</div></div>",5983:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5983\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFilterSettlingTime() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Filter Settling Time for any of its ChannelGroups.</div></div>",5984:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5984\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsThermocoupleType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Thermocouple Type for any of its ChannelGroups.</div></div>",5985:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5985\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsTempSensorOptions() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the TempSensorOptions configuration for any of its ChannelGroups.</div></div>",5986:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5986\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDebounceFilter() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Debounce Filter configuration for any of its ChannelGroups.</div></div>",5987:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5987\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports FatigueOptions configuration.</div></div>",5988:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5988\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsYoungsModConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Young\'s Modulus (part of FatigueOptions) configuration.</div></div>",5989:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5989\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPoissonsRatioConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Poisson\'s Ratio (part of FatigueOptions) configuration.</div></div>",5990:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5990\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueDebugModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports enabling Debug Mode (part of FatigueOptions) configuration.</div></div>",5991:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5991\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Fatigue Mode (part of FatigueOptions) configuration.</div></div>",5992:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5992\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports HistogramOptions configuration.</div></div>",5993:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5993\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramRateConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Histogram transmit rate (part of HistogramOptions) configuration.</div></div>",5994:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5994\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsHistogramEnableConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports turning Histograms on and off (part of FatigueOptions).</div></div>",5995:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5995\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsActivitySense() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the ActivitySense feature.</div></div>",5996:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5996\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoBalance() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Auto Balance command for any of its ChannelGroups.</div></div>",5997:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5997\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLegacyShuntCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the legacy Shunt Cal for any of its ChannelGroups.</div></div>",5998:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5998\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoCal_shm() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoCal SHM-Link command.</div></div>",5999:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype5999\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoCal_shm201() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoCal SHM-Link-201 command.</div></div>",6000:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6000\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoShuntCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports AutoShuntCal on any of this ChannelGroups.</div></div>",6001:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6001\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGetFactoryCal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node has factory calibrations stored for any of its ChannelGroups.</div></div>",6002:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6002\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLimitedDuration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports setting a limited duration of sampling.</div></div>",6003:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6003\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEventTrigger() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports Event Trigger sampling.</div></div>",6004:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6004\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDiagnosticInfo() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports sending Diagnostic Info.</div></div>",6005:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6005\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLoggedData() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports logging to internal memory.</div></div>",6006:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6006\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsPoll() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the poll command.</div></div>",6007:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6007\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorDelayConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of sensor delay.</div></div>",6008:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6008\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorDelayAlwaysOn() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports setting the sensor delay value to &quot;Always On.&quot;</div></div>",6009:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6009\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSensorOutputMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the Sensor Output Mode.</div></div>",6010:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6010\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCfcFilterConfiguration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the channel frequency class filter.</div></div>",6011:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6011\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsChannel(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint8</span>&nbsp;</td><td class=\"PName last\">channelNumber</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a specific channel is supported (can be enabled) by this Node.</div></div>",6012:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6012\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsSamplingMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::SamplingMode is supported by this Node.</div></div>",6013:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6013\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsSampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">WirelessSampleRate&nbsp;</td><td class=\"PName last\">sampleRate,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a sample rate is supported by the Node for the given WirelessTypes::SamplingMode.</div></div>",6014:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6014\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsCommunicationProtocol(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">protocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::CommProtocol is supported by this Node.</div></div>",6015:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6015\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataFormat(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td class=\"PName last\">dataFormat</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataFormat is supported by this Node.</div></div>",6016:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6016\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDefaultMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DefaultMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DefaultMode is supported by this Node.</div></div>",6017:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6017\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataCollectionMethod(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">collectionMethod</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataCollectionMethod is supported by this Node.</div></div>",6018:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6018\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">TransmitPower&nbsp;</td><td class=\"PName last\">power,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::TransmitPower is supported by this Node.</div></div>",6019:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6019\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDataMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::DataMode is supported by this Node.</div></div>",6020:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6020\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsTransducerType(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">TransducerType&nbsp;</td><td class=\"PName last\">transducerType</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::TransducerType is supported by this Node.</div></div>",6021:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6021\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsFatigueMode(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">FatigueMode&nbsp;</td><td class=\"PName last\">mode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::FatigueMode is supported by this Node.</div></div>",6022:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6022\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::InputRange is supported by this Node for the given ChannelMask.</div></div>",6023:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6023\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsInputRange(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">InputRange&nbsp;</td><td></td><td class=\"PName last\">range,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td></td><td class=\"PName last\">excitationVoltage</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if a WirelessTypes::InputRange is supported by this Node for the given ChannelMask.</div></div>",6024:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6024\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCentisecondEventDuration() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node configures event duration in 10s of milliseconds or not.</div></div>",6025:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6025\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsGetDiagnosticInfo() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Get Diagnostic Info command.</div></div>",6026:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6026\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNonSyncLogWithTimestamps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the version of Non-Sync Sampling that will add timestamps when logging.&nbsp; If the Node does not support this, when downloading logged data from the Node, no timestamp information will be given.</div></div>",6027:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6027\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedCategory(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedCategory&nbsp;</td><td class=\"PName last\">category</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Checks if the Node supports a specific WirelessTypes::DerivedCategory.</div></div>",6028:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6028\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsRawDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports any form of the Raw Data Mode (raw only, raw + derived, etc).</div></div>",6029:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6029\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports any form of the Derived Data Mode (derived only, raw + derived, etc).</div></div>",6030:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6030\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDerivedVelocityUnitConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of the Derived Velocity Unit.</div></div>",6031:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6031\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsExcitationVoltageConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of its Excitation Voltage.</div></div>",6032:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6032\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsLowBatteryThresholdConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuration of its low battery threshold.</div></div>",6033:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6033\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRate(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td></td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given &lt;SamplingMode&gt;, ChannelMask, and WirelessTypes::DataCollectionMethod.</div></div>",6034:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6034\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRateForSettlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SettlingTime&nbsp;</td><td class=\"PName last\">filterSettlingTime,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given WirelessTypes::SettlingTime.</div></div>",6035:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6035\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::WirelessSampleRate maxSampleRateForLowPassFilter(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Filter&nbsp;</td><td></td><td class=\"PName last\">lowPassFilter,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td></td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum SampleRate value that is supported by this Node with the given Low Pass Filter.</div></div>",6036:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6036\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::SettlingTime maxFilterSettlingTime(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rate</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::SettlingTime available for the given SampleRate.</div></div>",6037:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6037\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> minInactivityTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum inactivity timeout (in seconds) that is supported.</div></div>",6038:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6038\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> minLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum lost beacon timeout (in minutes) that is supported.&nbsp; Note: A value of 0 disable the lost beacon timeout.</div></div>",6039:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6039\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint16</span> maxLostBeaconTimeout() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum lost beacon timeout (in minutes) that is supported.</div></div>",6040:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6040\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> minCheckRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum check radio interval (in seconds) that is supported.</div></div>",6041:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6041\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> maxCheckRadioInterval() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum check radio interval (in seconds) that is supported.</div></div>",6042:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6042\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint32</span> minSweeps() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum number of sweeps that can be assigned for the duration of a continuous sampling session.</div></div>",6043:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6043\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxSweeps(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td></td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum number of sweeps that can be assigned for a given WirelessTypes::SamplingMode.&nbsp; This is the duration of each burst if in Burst Sync Sampling mode, or the total duration of sampling in other sampling modes.</div></div>",6044:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6044\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxSweepsPerBurst(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum number of sweeps per burst that can be assigned for a Burst Sync Sampling session.</div></div>",6045:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6045\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> TimeSpan minTimeBetweenBursts(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawChannels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedChannelMasks&nbsp;</td><td></td><td class=\"PName last\">derivedChannelMasks,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawSampleRate,</td></tr><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td></td><td class=\"PName last\">sweepsPerBurst,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td></td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum time that can be assigned for a Burst Sync Sampling session.</div></div>",6046:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6046\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const uint32</span> minSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the minimum sensor delay value (in microseconds) that is supported.</div></div>",6047:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6047\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const uint32</span> maxSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the maximum sensor delay value (in microseconds) that is supported.</div></div>",6048:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6048\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const uint32</span> defaultSensorDelay() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the default sensor delay value (in microseconds) that is supported.</div></div>",6049:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6049\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> maxEventTriggerTotalDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td></td><td class=\"PName last\">dataMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataFormat&nbsp;</td><td></td><td class=\"PName last\">dataFormat,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawChannels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DerivedChannelMasks&nbsp;</td><td></td><td class=\"PName last\">derivedChannelMasks,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">rawSampleRate,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">SampleRate&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">derivedDataRate</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the max event trigger duration (in milliseconds) that can be applied for both the pre and post event durations (combined).</div></div>",6050:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6050\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> normalizeEventDuration(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">duration</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the Event Trigger duration so that it is an acceptable value.</div></div>",6051:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6051\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual uint32</span> normalizeSensorDelay(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">uint32</span>&nbsp;</td><td class=\"PName last\">delay</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Normalizes the sensor delay so that it is an acceptable value.</div></div>",6052:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6052\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numDamageAngles() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of damage angles (see FatigueOptions) on this Node.</div></div>",6053:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6053\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numSnCurveSegments() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of Sn Curve segments (see FatigueOptions) on this Node.</div></div>",6054:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6054\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> numEventTriggers() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the number of supported event triggers on this Node.</div></div>",6055:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6055\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DefaultModes defaultModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DefaultModes that are supported by this Node.</div></div>",6056:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6056\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataCollectionMethods dataCollectionMethods() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DataCollectionMethods that are supported by this Node.</div></div>",6057:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6057\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataFormats dataFormats() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::DataFormats that are supported by this Node.</div></div>",6058:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6058\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::SamplingModes samplingModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::SamplingModes that are supported by this Node.</div></div>",6059:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6059\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates sampleRates(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">SamplingMode&nbsp;</td><td class=\"PName last\">samplingMode,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataCollectionMethod&nbsp;</td><td class=\"PName last\">dataCollectionMethod,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">DataMode&nbsp;</td><td class=\"PName last\">dataMode</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::WirelessSampleRates that are supported by this Node for the given sampling mode.</div></div>",6060:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6060\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates derivedDataRates() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::WirelessSampleRates that are supported by this Node for Derived Channels.&nbsp; These are the rates that the Derived Data will be calculated/sent. The standard sampleRates still apply in derived mode and control the sample rate of the raw channels used in the derived data calculations.</div></div>",6061:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6061\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransmitPowers transmitPowers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::TransmitPowers that are supported by this Node, for the given WirelessTypes::CommProtocol.&nbsp; Note: This list is dependent on the WirelessTypes::RegionCode of the device. If this changes, this function should be called again.</div></div>",6062:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6062\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransmitPowers transmitPowers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::TransmitPowers that are supported by this Node, for the given WirelessTypes::RegionCode and WirelessTypes::CommProtocol.</div></div>",6063:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6063\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::CommProtocols commProtocols() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::CommProtocols that are supported by this Node.</div></div>",6064:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6064\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::SensorOutputModes sensorOutputModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::SensorOutputModes that are supported by this Node.</div></div>",6065:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6065\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::CfcFilters cfcFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::ChannelFrequencyClass options that are supportedby this Node.</div></div>",6066:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6066\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::WirelessSampleRates histogramTransmitRates() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Histogram Transmit Rates that are supported by this Node.</div></div>",6067:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6067\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::FatigueModes fatigueModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::FatigueModes that are supported by this Node.</div></div>",6068:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6068\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Filters antiAliasingFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Anti-Aliasing WirelessTypes::Filters that are supported by this Node.</div></div>",6069:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6069\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Filters lowPassFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the Low-Pass WirelessTypes::Filters that are supported by this Node.</div></div>",6070:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6070\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::HighPassFilters highPassFilters() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the High-Pass WirelessTypes::Filters that are supported by this Node.</div></div>",6071:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6071\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::StorageLimitModes storageLimitModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of the WirelessTypes::StorageLimitModes that are supported by this Node.</div></div>",6072:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6072\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> InputRanges inputRanges(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of InputRanges that are supported by this Node for the specified channel mask.</div></div>",6073:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6073\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual const</span> InputRanges inputRanges(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">ChannelMask&nbsp;</td><td class=\"PNamePrefix\">&amp;</td><td class=\"PName last\">channels,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">Voltage&nbsp;</td><td></td><td class=\"PName last\">excitationVoltage</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets a list of WirelessTypes::InputRanges that are supported by this Node for the specified channel mask, for the given Excitation WirelessTypes::Voltage.</div></div>",6074:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6074\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DataModes dataModes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::DataModes that are supported by this Node.</div></div>",6075:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6075\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::TransducerTypes transducerTypes() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::TransducerTypes that are supported by this Node.</div></div>",6076:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6076\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::DerivedChannelMasks channelsPerDerivedCategory() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a map of WirelessTypes::DerivedCategory to ChannelMasks that are supported by this Node.&nbsp; The ChannelMask indicates the raw channels that are available for the derived category.</div></div>",6077:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6077\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::Voltages excitationVoltages() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets a list of WirelessTypes::Voltages that are supported by the Node for configuration.</div></div>",6078:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6078\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual const</span> WirelessTypes::VoltageType adcVoltageInputType() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the input voltage type of the ADC for this node.</div></div>",6079:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6079\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower maxTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::TransmitPower that is supported for the given parameters.</div></div>",6080:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6080\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower maxTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the maximum WirelessTypes::TransmitPower that is supported for the given parameters, using the Node\'s current region code.</div></div>",6081:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6081\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower minTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">RegionCode&nbsp;</td><td class=\"PName last\">region,</td></tr><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum WirelessTypes::TransmitPower that is supported for the given parameters.</div></div>",6082:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6082\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::TransmitPower minTransmitPower(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">WirelessTypes::</td><td class=\"PType\">CommProtocol&nbsp;</td><td class=\"PName last\">commProtocol</td></tr></table></td><td class=\"PAfterParameters\">) <span class=\"SHKeyword\">const</span></td></tr></table></div><div class=\"TTSummary\">Gets the minimum WirelessTypes::TransmitPower that is supported for the given parameters, using the Node\'s current region code.</div></div>",6083:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6083\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsNewTransmitPowers() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the new transmit powers (true), or the old ones (false).</div></div>",6084:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6084\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsAutoBalance2() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the AutoBalance (Version 2) command.</div></div>",6085:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6085\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsSleepIntervalSeconds() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports a sleep interval eeprom directly in seconds.</div></div>",6086:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6086\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEepromCommitViaRadioReset() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if eeprom changes can be committed by only cycling the radio, instead of cycling power.</div></div>",6087:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6087\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsFlashId() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports the Flash ID eeprom.</div></div>",6088:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6088\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsStorageLimitModeConfig() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports configuring storage limit mode.</div></div>",6089:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6089\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual uint8</span> datalogDownloadVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the version of datalogging download to use.</div></div>",6090:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6090\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> WirelessTypes::DelayVersion sensorDelayVersion() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Gets the version of sensor delay that the Node supports.</div></div>",6091:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6091\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> usesLegacySensorDelayAlwaysOn() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node uses the legacy value of 10,000 for always on (true) or the new value of 65,535 for always on (false).</div></div>",6092:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6092\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> usesFloatEventTriggerVal() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node uses floating point for event trigger values.&nbsp; Older nodes used uint16 (bits).</div></div>",6093:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6093\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> onlySupportsRawDataMode() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the raw data mode is the only data mode supported.</div></div>",6094:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6094\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsDataModeEeprom() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Data Mode eeprom location is supported.</div></div>",6095:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6095\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsCommProtocolEeprom() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Communication Protocol eeprom location is supported.</div></div>",6096:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype6096\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual bool</span> supportsEeprom1024AndAbove() <span class=\"SHKeyword\">const</span></div><div class=\"TTSummary\">Checks if the Node supports reading eeprom location 1024 and above.</div></div>"});