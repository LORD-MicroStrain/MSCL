//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace mscl {

public class GeometricUncertainty : GeometricVector {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal GeometricUncertainty(global::System.IntPtr cPtr, bool cMemoryOwn) : base(msclPINVOKE.GeometricUncertainty_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GeometricUncertainty obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          msclPINVOKE.delete_GeometricUncertainty(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public GeometricUncertainty(float x_init, float y_init, float z_init, GeometricVector correlatingValue) : this(msclPINVOKE.new_GeometricUncertainty__SWIG_0(x_init, y_init, z_init, GeometricVector.getCPtr(correlatingValue)), true) {
    if (msclPINVOKE.SWIGPendingException.Pending) throw msclPINVOKE.SWIGPendingException.Retrieve();
  }

  public GeometricUncertainty(float x_init, float y_init, float z_init, Position correlatingValue) : this(msclPINVOKE.new_GeometricUncertainty__SWIG_1(x_init, y_init, z_init, Position.getCPtr(correlatingValue)), true) {
    if (msclPINVOKE.SWIGPendingException.Pending) throw msclPINVOKE.SWIGPendingException.Retrieve();
  }

  public GeometricUncertainty(float x_init, float y_init, float z_init, PositionVelocityReferenceFrame ref_) : this(msclPINVOKE.new_GeometricUncertainty__SWIG_2(x_init, y_init, z_init, (int)ref_), true) {
    if (msclPINVOKE.SWIGPendingException.Pending) throw msclPINVOKE.SWIGPendingException.Retrieve();
  }

  public GeometricUncertainty(float x_init, float y_init, float z_init) : this(msclPINVOKE.new_GeometricUncertainty__SWIG_3(x_init, y_init, z_init), true) {
    if (msclPINVOKE.SWIGPendingException.Pending) throw msclPINVOKE.SWIGPendingException.Retrieve();
  }

  public GeometricUncertainty() : this(msclPINVOKE.new_GeometricUncertainty__SWIG_4(), true) {
    if (msclPINVOKE.SWIGPendingException.Pending) throw msclPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
