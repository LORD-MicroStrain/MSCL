//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace mscl {

public class InertialDataEnums : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal InertialDataEnums(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(InertialDataEnums obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~InertialDataEnums() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          msclPINVOKE.delete_InertialDataEnums(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public InertialDataEnums() : this(msclPINVOKE.new_InertialDataEnums(), true) {
    if (msclPINVOKE.SWIGPendingException.Pending) throw msclPINVOKE.SWIGPendingException.Retrieve();
  }

  public enum GnssFixType {
    FIXTYPE_3D = 0x00,
    FIXTYPE_2D = 0x01,
    FIXTYPE_TIMEONLY = 0x02,
    FIXTYPE_NONE = 0x03,
    FIXTYPE_INVALID = 0x04
  }

  public enum HwStatus_SensorState {
    SENSORSTATE_OFF = 0x00,
    SENSORSTATE_ON = 0x01,
    SENSORSTATE_UNKNOWN = 0x02
  }

  public enum HwStatus_AntennaState {
    ANTENNASTATE_INIT = 0x01,
    ANTENNASTATE_SHORT = 0x02,
    ANTENNASTATE_OPEN = 0x03,
    ANTENNASTATE_GOOD = 0x04,
    ANTENNASTATE_UNKNOWN = 0x05
  }

  public enum HwStatus_AntennaPower {
    ANTENNAPOWER_OFF = 0x00,
    ANTENNAPOWER_ON = 0x01,
    ANTENNAPOWER_UNKNOWN = 0x02
  }

  public enum FilterStatus_FilterState {
    FILTERSTATE_STARTUP = 0x00,
    FILTERSTATE_INIT = 0x01,
    FILTERSTATE_RUNNING_SLN_VALID = 0x02,
    FILTERSTATE_RUNNING_SLN_ERROR = 0x03
  }

  public enum FilterStatus_DynamicsMode {
    DYNAMICSMODE_PORTABLE = 0x01,
    DYNAMICSMODE_AUTOMOTIVE = 0x02,
    DYNAMICSMODE_AIRBORNE = 0x03
  }

  public enum FilterStatus_StatusFlags {
    FILTERSTATUS_IMU_UNAVAILABLE = 0x0001,
    FILTERSTATUS_GPS_UNAVAILABLE = 0x0002,
    FILTERSTATUS_MATRIX_SINGULARITY_IN_CALC = 0x0008,
    FILTERSTATUS_POS_COVARIANCE_HIGH_WARN = 0x0010,
    FILTERSTATUS_VEL_COVARIANCE_HIGH_WARN = 0x0020,
    FILTERSTATUS_ATT_COVARIANCE_HIGH_WARN = 0x0040,
    FILTERSTATUS_NAN_IN_SOLUTION = 0x0080,
    FILTERSTATUS_ATT_NOT_INIT = 0x1000,
    FILTERSTATUS_POS_VEL_NOT_INIT = 0x2000
  }

  public enum HeadingSource {
    HEADINGSOURCE_NONE = 0x0000,
    HEADINGSOURCE_INTERNAL_MAGNETOMETER = 0x0001,
    HEADINGSOURCE_INTERNAL_GPS_VELOCITY_VECTOR = 0x0002,
    HEADINGSOURCE_EXTERNAL_HEADING_UPDATE_CMD = 0x0004
  }

}

}
